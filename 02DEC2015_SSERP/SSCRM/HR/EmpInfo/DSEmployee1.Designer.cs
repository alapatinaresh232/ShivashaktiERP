//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SSCRM.HR.EmpInfo {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DSEmployee")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DSEmployee : global::System.Data.DataSet {
        
        private MainHead1DataTable tableMainHead1;
        
        private EducationDataTable tableEducation;
        
        private ShortCourseDataTable tableShortCourse;
        
        private CurricularDataTable tableCurricular;
        
        private FamilyDataTable tableFamily;
        
        private ReferenceDataTable tableReference;
        
        private ExperienceDataTable tableExperience;
        
        private DocumentsDataTable tableDocuments;
        
        private InductionDataTable tableInduction;
        
        private EORADataTable tableEORA;
        
        private MainHead11DataTable tableMainHead11;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DSEmployee() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DSEmployee(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["MainHead1"] != null)) {
                    base.Tables.Add(new MainHead1DataTable(ds.Tables["MainHead1"]));
                }
                if ((ds.Tables["Education"] != null)) {
                    base.Tables.Add(new EducationDataTable(ds.Tables["Education"]));
                }
                if ((ds.Tables["ShortCourse"] != null)) {
                    base.Tables.Add(new ShortCourseDataTable(ds.Tables["ShortCourse"]));
                }
                if ((ds.Tables["Curricular"] != null)) {
                    base.Tables.Add(new CurricularDataTable(ds.Tables["Curricular"]));
                }
                if ((ds.Tables["Family"] != null)) {
                    base.Tables.Add(new FamilyDataTable(ds.Tables["Family"]));
                }
                if ((ds.Tables["Reference"] != null)) {
                    base.Tables.Add(new ReferenceDataTable(ds.Tables["Reference"]));
                }
                if ((ds.Tables["Experience"] != null)) {
                    base.Tables.Add(new ExperienceDataTable(ds.Tables["Experience"]));
                }
                if ((ds.Tables["Documents"] != null)) {
                    base.Tables.Add(new DocumentsDataTable(ds.Tables["Documents"]));
                }
                if ((ds.Tables["Induction"] != null)) {
                    base.Tables.Add(new InductionDataTable(ds.Tables["Induction"]));
                }
                if ((ds.Tables["EORA"] != null)) {
                    base.Tables.Add(new EORADataTable(ds.Tables["EORA"]));
                }
                if ((ds.Tables["MainHead11"] != null)) {
                    base.Tables.Add(new MainHead11DataTable(ds.Tables["MainHead11"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MainHead1DataTable MainHead1 {
            get {
                return this.tableMainHead1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EducationDataTable Education {
            get {
                return this.tableEducation;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ShortCourseDataTable ShortCourse {
            get {
                return this.tableShortCourse;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CurricularDataTable Curricular {
            get {
                return this.tableCurricular;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FamilyDataTable Family {
            get {
                return this.tableFamily;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ReferenceDataTable Reference {
            get {
                return this.tableReference;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ExperienceDataTable Experience {
            get {
                return this.tableExperience;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DocumentsDataTable Documents {
            get {
                return this.tableDocuments;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InductionDataTable Induction {
            get {
                return this.tableInduction;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EORADataTable EORA {
            get {
                return this.tableEORA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MainHead11DataTable MainHead11 {
            get {
                return this.tableMainHead11;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DSEmployee cln = ((DSEmployee)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["MainHead1"] != null)) {
                    base.Tables.Add(new MainHead1DataTable(ds.Tables["MainHead1"]));
                }
                if ((ds.Tables["Education"] != null)) {
                    base.Tables.Add(new EducationDataTable(ds.Tables["Education"]));
                }
                if ((ds.Tables["ShortCourse"] != null)) {
                    base.Tables.Add(new ShortCourseDataTable(ds.Tables["ShortCourse"]));
                }
                if ((ds.Tables["Curricular"] != null)) {
                    base.Tables.Add(new CurricularDataTable(ds.Tables["Curricular"]));
                }
                if ((ds.Tables["Family"] != null)) {
                    base.Tables.Add(new FamilyDataTable(ds.Tables["Family"]));
                }
                if ((ds.Tables["Reference"] != null)) {
                    base.Tables.Add(new ReferenceDataTable(ds.Tables["Reference"]));
                }
                if ((ds.Tables["Experience"] != null)) {
                    base.Tables.Add(new ExperienceDataTable(ds.Tables["Experience"]));
                }
                if ((ds.Tables["Documents"] != null)) {
                    base.Tables.Add(new DocumentsDataTable(ds.Tables["Documents"]));
                }
                if ((ds.Tables["Induction"] != null)) {
                    base.Tables.Add(new InductionDataTable(ds.Tables["Induction"]));
                }
                if ((ds.Tables["EORA"] != null)) {
                    base.Tables.Add(new EORADataTable(ds.Tables["EORA"]));
                }
                if ((ds.Tables["MainHead11"] != null)) {
                    base.Tables.Add(new MainHead11DataTable(ds.Tables["MainHead11"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableMainHead1 = ((MainHead1DataTable)(base.Tables["MainHead1"]));
            if ((initTable == true)) {
                if ((this.tableMainHead1 != null)) {
                    this.tableMainHead1.InitVars();
                }
            }
            this.tableEducation = ((EducationDataTable)(base.Tables["Education"]));
            if ((initTable == true)) {
                if ((this.tableEducation != null)) {
                    this.tableEducation.InitVars();
                }
            }
            this.tableShortCourse = ((ShortCourseDataTable)(base.Tables["ShortCourse"]));
            if ((initTable == true)) {
                if ((this.tableShortCourse != null)) {
                    this.tableShortCourse.InitVars();
                }
            }
            this.tableCurricular = ((CurricularDataTable)(base.Tables["Curricular"]));
            if ((initTable == true)) {
                if ((this.tableCurricular != null)) {
                    this.tableCurricular.InitVars();
                }
            }
            this.tableFamily = ((FamilyDataTable)(base.Tables["Family"]));
            if ((initTable == true)) {
                if ((this.tableFamily != null)) {
                    this.tableFamily.InitVars();
                }
            }
            this.tableReference = ((ReferenceDataTable)(base.Tables["Reference"]));
            if ((initTable == true)) {
                if ((this.tableReference != null)) {
                    this.tableReference.InitVars();
                }
            }
            this.tableExperience = ((ExperienceDataTable)(base.Tables["Experience"]));
            if ((initTable == true)) {
                if ((this.tableExperience != null)) {
                    this.tableExperience.InitVars();
                }
            }
            this.tableDocuments = ((DocumentsDataTable)(base.Tables["Documents"]));
            if ((initTable == true)) {
                if ((this.tableDocuments != null)) {
                    this.tableDocuments.InitVars();
                }
            }
            this.tableInduction = ((InductionDataTable)(base.Tables["Induction"]));
            if ((initTable == true)) {
                if ((this.tableInduction != null)) {
                    this.tableInduction.InitVars();
                }
            }
            this.tableEORA = ((EORADataTable)(base.Tables["EORA"]));
            if ((initTable == true)) {
                if ((this.tableEORA != null)) {
                    this.tableEORA.InitVars();
                }
            }
            this.tableMainHead11 = ((MainHead11DataTable)(base.Tables["MainHead11"]));
            if ((initTable == true)) {
                if ((this.tableMainHead11 != null)) {
                    this.tableMainHead11.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DSEmployee";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DSEmployee.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableMainHead1 = new MainHead1DataTable();
            base.Tables.Add(this.tableMainHead1);
            this.tableEducation = new EducationDataTable();
            base.Tables.Add(this.tableEducation);
            this.tableShortCourse = new ShortCourseDataTable();
            base.Tables.Add(this.tableShortCourse);
            this.tableCurricular = new CurricularDataTable();
            base.Tables.Add(this.tableCurricular);
            this.tableFamily = new FamilyDataTable();
            base.Tables.Add(this.tableFamily);
            this.tableReference = new ReferenceDataTable();
            base.Tables.Add(this.tableReference);
            this.tableExperience = new ExperienceDataTable();
            base.Tables.Add(this.tableExperience);
            this.tableDocuments = new DocumentsDataTable();
            base.Tables.Add(this.tableDocuments);
            this.tableInduction = new InductionDataTable();
            base.Tables.Add(this.tableInduction);
            this.tableEORA = new EORADataTable();
            base.Tables.Add(this.tableEORA);
            this.tableMainHead11 = new MainHead11DataTable();
            base.Tables.Add(this.tableMainHead11);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMainHead1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEducation() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeShortCourse() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCurricular() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFamily() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeReference() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeExperience() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDocuments() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeInduction() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEORA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMainHead11() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DSEmployee ds = new DSEmployee();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void MainHead1RowChangeEventHandler(object sender, MainHead1RowChangeEvent e);
        
        public delegate void EducationRowChangeEventHandler(object sender, EducationRowChangeEvent e);
        
        public delegate void ShortCourseRowChangeEventHandler(object sender, ShortCourseRowChangeEvent e);
        
        public delegate void CurricularRowChangeEventHandler(object sender, CurricularRowChangeEvent e);
        
        public delegate void FamilyRowChangeEventHandler(object sender, FamilyRowChangeEvent e);
        
        public delegate void ReferenceRowChangeEventHandler(object sender, ReferenceRowChangeEvent e);
        
        public delegate void ExperienceRowChangeEventHandler(object sender, ExperienceRowChangeEvent e);
        
        public delegate void DocumentsRowChangeEventHandler(object sender, DocumentsRowChangeEvent e);
        
        public delegate void InductionRowChangeEventHandler(object sender, InductionRowChangeEvent e);
        
        public delegate void EORARowChangeEventHandler(object sender, EORARowChangeEvent e);
        
        public delegate void MainHead11RowChangeEventHandler(object sender, MainHead11RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MainHead1DataTable : global::System.Data.TypedTableBase<MainHead1Row> {
            
            private global::System.Data.DataColumn columnHAMH_COMPANY_CODE;
            
            private global::System.Data.DataColumn columnHAMH_BRANCH_CODE;
            
            private global::System.Data.DataColumn columnHAMH_APPL_NUMBER;
            
            private global::System.Data.DataColumn columnHAMH_APPL_DATE;
            
            private global::System.Data.DataColumn columnHAMH_RECRUITMENT_SOURCE_CODE;
            
            private global::System.Data.DataColumn columnHAMH_RECRUITMENT_SOURCE_DELT_CODE;
            
            private global::System.Data.DataColumn columnHAMH_RECRUITMENT_SOURCE_ECODE;
            
            private global::System.Data.DataColumn columnHAMH_NAME;
            
            private global::System.Data.DataColumn columnHAMH_FORH;
            
            private global::System.Data.DataColumn columnHAMH_FORH_NAME;
            
            private global::System.Data.DataColumn columnHAMH_DOJ;
            
            private global::System.Data.DataColumn columnHAMH_DOB;
            
            private global::System.Data.DataColumn columnHAMH_NATIVE_PLACE;
            
            private global::System.Data.DataColumn columnHAMH_SEX;
            
            private global::System.Data.DataColumn columnHAMH_NAIONALITY;
            
            private global::System.Data.DataColumn columnHAMH_RELIGION;
            
            private global::System.Data.DataColumn columnHAMH_MATRITAL_STATUS;
            
            private global::System.Data.DataColumn columnHAMH_MARRIAGE_DATE;
            
            private global::System.Data.DataColumn columnHAMH_NOMINIEE_NAME;
            
            private global::System.Data.DataColumn columnHAMH_NOMINIEE_RELATION;
            
            private global::System.Data.DataColumn columnHAMH_PD_HEIGHT;
            
            private global::System.Data.DataColumn columnHAMH_PD_WEIGHT;
            
            private global::System.Data.DataColumn columnHAMH_PD_BLOOD_GROUP_CODE;
            
            private global::System.Data.DataColumn columnHAMH_PD_PHYSICAL_DISABILITY;
            
            private global::System.Data.DataColumn columnHAMH_PD_PROLONGED_ILLNESS;
            
            private global::System.Data.DataColumn columnHAMH_PD_PROLONGED_ILLNESS_PERIOD;
            
            private global::System.Data.DataColumn columnHAMH_ADD_PRES_ADDR_HNO;
            
            private global::System.Data.DataColumn columnHAMH_ADD_PRES_ADDR_LANDMARK;
            
            private global::System.Data.DataColumn columnHAMH_ADD_PRES_ADDR_VILL_OR_TOWN;
            
            private global::System.Data.DataColumn columnHAMH_ADD_PRES_ADDR_MANDAL;
            
            private global::System.Data.DataColumn columnHAMH_ADD_PRES_ADDR_DISTRICT;
            
            private global::System.Data.DataColumn columnHAMH_ADD_PRES_ADDR_STATE;
            
            private global::System.Data.DataColumn columnHAMH_ADD_PRES_ADDR_PIN;
            
            private global::System.Data.DataColumn columnHAMH_ADD_PRES_ADDR_PHONE;
            
            private global::System.Data.DataColumn columnHAMH_ADD_PERM_ADDR_HNO;
            
            private global::System.Data.DataColumn columnHAMH_ADD_PERM_ADDR_LANDMARK;
            
            private global::System.Data.DataColumn columnHAMH_ADD_PERM_ADDR_VILL_OR_TOWN;
            
            private global::System.Data.DataColumn columnHAMH_ADD_PERM_ADDR_MANDAL;
            
            private global::System.Data.DataColumn columnHAMH_ADD_PERM_ADDR_DISTRICT;
            
            private global::System.Data.DataColumn columnHAMH_ADD_PERM_ADDR_STATE;
            
            private global::System.Data.DataColumn columnHAMH_ADD_PERM_ADDR_PIN;
            
            private global::System.Data.DataColumn columnHAMH_ADD_PERM_ADDR_PHONE;
            
            private global::System.Data.DataColumn columnHAMH_ADD_CONTPERS_NAME;
            
            private global::System.Data.DataColumn columnHAMH_ADD_CONTPERS_ADDR_HNO;
            
            private global::System.Data.DataColumn columnHAMH_ADD_CONTPERS_ADDR_LANDMARK;
            
            private global::System.Data.DataColumn columnHAMH_ADD_CONTPERS_ADDR_VILL_OR_TOWN;
            
            private global::System.Data.DataColumn columnHAMH_ADD_CONTPERS_ADDR_MANDAL;
            
            private global::System.Data.DataColumn columnHAMH_ADD_CONTPERS_ADDR_DISTRICT;
            
            private global::System.Data.DataColumn columnHAMH_ADD_CONTPERS_ADDR_STATE;
            
            private global::System.Data.DataColumn columnHAMH_ADD_CONTPERS_ADDR_PIN;
            
            private global::System.Data.DataColumn columnHAMH_ADD_CONTPERS_ADDR_PHONE_RES;
            
            private global::System.Data.DataColumn columnHAMH_ADD_CONTPERS_ADDR_PHONE_OFF;
            
            private global::System.Data.DataColumn columnHAMH_VD_OWN_VEHICLE_FLAG;
            
            private global::System.Data.DataColumn columnHAMH_VD_VEHICLE_REG_NUMBER;
            
            private global::System.Data.DataColumn columnHAMH_VD_VEHICLE_MAKE;
            
            private global::System.Data.DataColumn columnHAMH_VD_DL_NUMBER;
            
            private global::System.Data.DataColumn columnHAMH_VD_PASSPORT_NUMBER;
            
            private global::System.Data.DataColumn columnHAMH_VD_PAN_CARD_NUMBER;
            
            private global::System.Data.DataColumn columnHAMH_MY_PHOTO;
            
            private global::System.Data.DataColumn columnHAMH_INTERVIEW_DONE_BY_ECODE;
            
            private global::System.Data.DataColumn columnHAMH_INTERVIEW_REMARKS;
            
            private global::System.Data.DataColumn columnHAMH_INTERVIEW_DATE;
            
            private global::System.Data.DataColumn columnHAMH_LEFT_DATE;
            
            private global::System.Data.DataColumn columnHAMH_LEFT_REASON;
            
            private global::System.Data.DataColumn columnHAMH_LEFT_APPROVAL_FLAG;
            
            private global::System.Data.DataColumn columnHAMH_LEFT_APPROVAL_ECODE;
            
            private global::System.Data.DataColumn columnHAMH_EORA_TYPE;
            
            private global::System.Data.DataColumn columnHAMH_EORA_CODE;
            
            private global::System.Data.DataColumn columnHAMH_APPROVAL_NO;
            
            private global::System.Data.DataColumn columnHAMH_APPROVAL_DATE;
            
            private global::System.Data.DataColumn columnHAMH_APPL_PENDING_REASON;
            
            private global::System.Data.DataColumn columnHAMH_WORKING_STATUS;
            
            private global::System.Data.DataColumn columnHAMH_CREATED_BY;
            
            private global::System.Data.DataColumn columnHAMH_CREATED_DATE;
            
            private global::System.Data.DataColumn columnHAMH_MODIFIED_BY;
            
            private global::System.Data.DataColumn columnHAMH_MODIFIED_DATE;
            
            private global::System.Data.DataColumn columnHAED_APPL_NUMBER;
            
            private global::System.Data.DataColumn columnHAED_SSC_NUMBER;
            
            private global::System.Data.DataColumn columnHAED_NAME;
            
            private global::System.Data.DataColumn columnHAED_DATEOFBIRTH;
            
            private global::System.Data.DataColumn columnHAED_FATHER_NAME;
            
            private global::System.Data.DataColumn columnDEPT_ID;
            
            private global::System.Data.DataColumn columnDESG_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MainHead1DataTable() {
                this.TableName = "MainHead1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MainHead1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MainHead1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_COMPANY_CODEColumn {
                get {
                    return this.columnHAMH_COMPANY_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_BRANCH_CODEColumn {
                get {
                    return this.columnHAMH_BRANCH_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_APPL_NUMBERColumn {
                get {
                    return this.columnHAMH_APPL_NUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_APPL_DATEColumn {
                get {
                    return this.columnHAMH_APPL_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_RECRUITMENT_SOURCE_CODEColumn {
                get {
                    return this.columnHAMH_RECRUITMENT_SOURCE_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_RECRUITMENT_SOURCE_DELT_CODEColumn {
                get {
                    return this.columnHAMH_RECRUITMENT_SOURCE_DELT_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_RECRUITMENT_SOURCE_ECODEColumn {
                get {
                    return this.columnHAMH_RECRUITMENT_SOURCE_ECODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_NAMEColumn {
                get {
                    return this.columnHAMH_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_FORHColumn {
                get {
                    return this.columnHAMH_FORH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_FORH_NAMEColumn {
                get {
                    return this.columnHAMH_FORH_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_DOJColumn {
                get {
                    return this.columnHAMH_DOJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_DOBColumn {
                get {
                    return this.columnHAMH_DOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_NATIVE_PLACEColumn {
                get {
                    return this.columnHAMH_NATIVE_PLACE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_SEXColumn {
                get {
                    return this.columnHAMH_SEX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_NAIONALITYColumn {
                get {
                    return this.columnHAMH_NAIONALITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_RELIGIONColumn {
                get {
                    return this.columnHAMH_RELIGION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_MATRITAL_STATUSColumn {
                get {
                    return this.columnHAMH_MATRITAL_STATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_MARRIAGE_DATEColumn {
                get {
                    return this.columnHAMH_MARRIAGE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_NOMINIEE_NAMEColumn {
                get {
                    return this.columnHAMH_NOMINIEE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_NOMINIEE_RELATIONColumn {
                get {
                    return this.columnHAMH_NOMINIEE_RELATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_PD_HEIGHTColumn {
                get {
                    return this.columnHAMH_PD_HEIGHT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_PD_WEIGHTColumn {
                get {
                    return this.columnHAMH_PD_WEIGHT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_PD_BLOOD_GROUP_CODEColumn {
                get {
                    return this.columnHAMH_PD_BLOOD_GROUP_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_PD_PHYSICAL_DISABILITYColumn {
                get {
                    return this.columnHAMH_PD_PHYSICAL_DISABILITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_PD_PROLONGED_ILLNESSColumn {
                get {
                    return this.columnHAMH_PD_PROLONGED_ILLNESS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_PD_PROLONGED_ILLNESS_PERIODColumn {
                get {
                    return this.columnHAMH_PD_PROLONGED_ILLNESS_PERIOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_ADD_PRES_ADDR_HNOColumn {
                get {
                    return this.columnHAMH_ADD_PRES_ADDR_HNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_ADD_PRES_ADDR_LANDMARKColumn {
                get {
                    return this.columnHAMH_ADD_PRES_ADDR_LANDMARK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_ADD_PRES_ADDR_VILL_OR_TOWNColumn {
                get {
                    return this.columnHAMH_ADD_PRES_ADDR_VILL_OR_TOWN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_ADD_PRES_ADDR_MANDALColumn {
                get {
                    return this.columnHAMH_ADD_PRES_ADDR_MANDAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_ADD_PRES_ADDR_DISTRICTColumn {
                get {
                    return this.columnHAMH_ADD_PRES_ADDR_DISTRICT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_ADD_PRES_ADDR_STATEColumn {
                get {
                    return this.columnHAMH_ADD_PRES_ADDR_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_ADD_PRES_ADDR_PINColumn {
                get {
                    return this.columnHAMH_ADD_PRES_ADDR_PIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_ADD_PRES_ADDR_PHONEColumn {
                get {
                    return this.columnHAMH_ADD_PRES_ADDR_PHONE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_ADD_PERM_ADDR_HNOColumn {
                get {
                    return this.columnHAMH_ADD_PERM_ADDR_HNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_ADD_PERM_ADDR_LANDMARKColumn {
                get {
                    return this.columnHAMH_ADD_PERM_ADDR_LANDMARK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_ADD_PERM_ADDR_VILL_OR_TOWNColumn {
                get {
                    return this.columnHAMH_ADD_PERM_ADDR_VILL_OR_TOWN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_ADD_PERM_ADDR_MANDALColumn {
                get {
                    return this.columnHAMH_ADD_PERM_ADDR_MANDAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_ADD_PERM_ADDR_DISTRICTColumn {
                get {
                    return this.columnHAMH_ADD_PERM_ADDR_DISTRICT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_ADD_PERM_ADDR_STATEColumn {
                get {
                    return this.columnHAMH_ADD_PERM_ADDR_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_ADD_PERM_ADDR_PINColumn {
                get {
                    return this.columnHAMH_ADD_PERM_ADDR_PIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_ADD_PERM_ADDR_PHONEColumn {
                get {
                    return this.columnHAMH_ADD_PERM_ADDR_PHONE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_ADD_CONTPERS_NAMEColumn {
                get {
                    return this.columnHAMH_ADD_CONTPERS_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_ADD_CONTPERS_ADDR_HNOColumn {
                get {
                    return this.columnHAMH_ADD_CONTPERS_ADDR_HNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_ADD_CONTPERS_ADDR_LANDMARKColumn {
                get {
                    return this.columnHAMH_ADD_CONTPERS_ADDR_LANDMARK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_ADD_CONTPERS_ADDR_VILL_OR_TOWNColumn {
                get {
                    return this.columnHAMH_ADD_CONTPERS_ADDR_VILL_OR_TOWN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_ADD_CONTPERS_ADDR_MANDALColumn {
                get {
                    return this.columnHAMH_ADD_CONTPERS_ADDR_MANDAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_ADD_CONTPERS_ADDR_DISTRICTColumn {
                get {
                    return this.columnHAMH_ADD_CONTPERS_ADDR_DISTRICT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_ADD_CONTPERS_ADDR_STATEColumn {
                get {
                    return this.columnHAMH_ADD_CONTPERS_ADDR_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_ADD_CONTPERS_ADDR_PINColumn {
                get {
                    return this.columnHAMH_ADD_CONTPERS_ADDR_PIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_ADD_CONTPERS_ADDR_PHONE_RESColumn {
                get {
                    return this.columnHAMH_ADD_CONTPERS_ADDR_PHONE_RES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_ADD_CONTPERS_ADDR_PHONE_OFFColumn {
                get {
                    return this.columnHAMH_ADD_CONTPERS_ADDR_PHONE_OFF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_VD_OWN_VEHICLE_FLAGColumn {
                get {
                    return this.columnHAMH_VD_OWN_VEHICLE_FLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_VD_VEHICLE_REG_NUMBERColumn {
                get {
                    return this.columnHAMH_VD_VEHICLE_REG_NUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_VD_VEHICLE_MAKEColumn {
                get {
                    return this.columnHAMH_VD_VEHICLE_MAKE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_VD_DL_NUMBERColumn {
                get {
                    return this.columnHAMH_VD_DL_NUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_VD_PASSPORT_NUMBERColumn {
                get {
                    return this.columnHAMH_VD_PASSPORT_NUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_VD_PAN_CARD_NUMBERColumn {
                get {
                    return this.columnHAMH_VD_PAN_CARD_NUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_MY_PHOTOColumn {
                get {
                    return this.columnHAMH_MY_PHOTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_INTERVIEW_DONE_BY_ECODEColumn {
                get {
                    return this.columnHAMH_INTERVIEW_DONE_BY_ECODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_INTERVIEW_REMARKSColumn {
                get {
                    return this.columnHAMH_INTERVIEW_REMARKS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_INTERVIEW_DATEColumn {
                get {
                    return this.columnHAMH_INTERVIEW_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_LEFT_DATEColumn {
                get {
                    return this.columnHAMH_LEFT_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_LEFT_REASONColumn {
                get {
                    return this.columnHAMH_LEFT_REASON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_LEFT_APPROVAL_FLAGColumn {
                get {
                    return this.columnHAMH_LEFT_APPROVAL_FLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_LEFT_APPROVAL_ECODEColumn {
                get {
                    return this.columnHAMH_LEFT_APPROVAL_ECODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_EORA_TYPEColumn {
                get {
                    return this.columnHAMH_EORA_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_EORA_CODEColumn {
                get {
                    return this.columnHAMH_EORA_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_APPROVAL_NOColumn {
                get {
                    return this.columnHAMH_APPROVAL_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_APPROVAL_DATEColumn {
                get {
                    return this.columnHAMH_APPROVAL_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_APPL_PENDING_REASONColumn {
                get {
                    return this.columnHAMH_APPL_PENDING_REASON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_WORKING_STATUSColumn {
                get {
                    return this.columnHAMH_WORKING_STATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_CREATED_BYColumn {
                get {
                    return this.columnHAMH_CREATED_BY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_CREATED_DATEColumn {
                get {
                    return this.columnHAMH_CREATED_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_MODIFIED_BYColumn {
                get {
                    return this.columnHAMH_MODIFIED_BY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAMH_MODIFIED_DATEColumn {
                get {
                    return this.columnHAMH_MODIFIED_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAED_APPL_NUMBERColumn {
                get {
                    return this.columnHAED_APPL_NUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAED_SSC_NUMBERColumn {
                get {
                    return this.columnHAED_SSC_NUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAED_NAMEColumn {
                get {
                    return this.columnHAED_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAED_DATEOFBIRTHColumn {
                get {
                    return this.columnHAED_DATEOFBIRTH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAED_FATHER_NAMEColumn {
                get {
                    return this.columnHAED_FATHER_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEPT_IDColumn {
                get {
                    return this.columnDEPT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESG_IDColumn {
                get {
                    return this.columnDESG_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MainHead1Row this[int index] {
                get {
                    return ((MainHead1Row)(this.Rows[index]));
                }
            }
            
            public event MainHead1RowChangeEventHandler MainHead1RowChanging;
            
            public event MainHead1RowChangeEventHandler MainHead1RowChanged;
            
            public event MainHead1RowChangeEventHandler MainHead1RowDeleting;
            
            public event MainHead1RowChangeEventHandler MainHead1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMainHead1Row(MainHead1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MainHead1Row AddMainHead1Row(
                        string HAMH_COMPANY_CODE, 
                        string HAMH_BRANCH_CODE, 
                        decimal HAMH_APPL_NUMBER, 
                        System.DateTime HAMH_APPL_DATE, 
                        string HAMH_RECRUITMENT_SOURCE_CODE, 
                        string HAMH_RECRUITMENT_SOURCE_DELT_CODE, 
                        decimal HAMH_RECRUITMENT_SOURCE_ECODE, 
                        string HAMH_NAME, 
                        string HAMH_FORH, 
                        string HAMH_FORH_NAME, 
                        System.DateTime HAMH_DOJ, 
                        System.DateTime HAMH_DOB, 
                        string HAMH_NATIVE_PLACE, 
                        string HAMH_SEX, 
                        string HAMH_NAIONALITY, 
                        string HAMH_RELIGION, 
                        string HAMH_MATRITAL_STATUS, 
                        System.DateTime HAMH_MARRIAGE_DATE, 
                        string HAMH_NOMINIEE_NAME, 
                        string HAMH_NOMINIEE_RELATION, 
                        decimal HAMH_PD_HEIGHT, 
                        decimal HAMH_PD_WEIGHT, 
                        string HAMH_PD_BLOOD_GROUP_CODE, 
                        string HAMH_PD_PHYSICAL_DISABILITY, 
                        string HAMH_PD_PROLONGED_ILLNESS, 
                        string HAMH_PD_PROLONGED_ILLNESS_PERIOD, 
                        string HAMH_ADD_PRES_ADDR_HNO, 
                        string HAMH_ADD_PRES_ADDR_LANDMARK, 
                        string HAMH_ADD_PRES_ADDR_VILL_OR_TOWN, 
                        string HAMH_ADD_PRES_ADDR_MANDAL, 
                        string HAMH_ADD_PRES_ADDR_DISTRICT, 
                        string HAMH_ADD_PRES_ADDR_STATE, 
                        decimal HAMH_ADD_PRES_ADDR_PIN, 
                        string HAMH_ADD_PRES_ADDR_PHONE, 
                        string HAMH_ADD_PERM_ADDR_HNO, 
                        string HAMH_ADD_PERM_ADDR_LANDMARK, 
                        string HAMH_ADD_PERM_ADDR_VILL_OR_TOWN, 
                        string HAMH_ADD_PERM_ADDR_MANDAL, 
                        string HAMH_ADD_PERM_ADDR_DISTRICT, 
                        string HAMH_ADD_PERM_ADDR_STATE, 
                        decimal HAMH_ADD_PERM_ADDR_PIN, 
                        string HAMH_ADD_PERM_ADDR_PHONE, 
                        string HAMH_ADD_CONTPERS_NAME, 
                        string HAMH_ADD_CONTPERS_ADDR_HNO, 
                        string HAMH_ADD_CONTPERS_ADDR_LANDMARK, 
                        string HAMH_ADD_CONTPERS_ADDR_VILL_OR_TOWN, 
                        string HAMH_ADD_CONTPERS_ADDR_MANDAL, 
                        string HAMH_ADD_CONTPERS_ADDR_DISTRICT, 
                        string HAMH_ADD_CONTPERS_ADDR_STATE, 
                        decimal HAMH_ADD_CONTPERS_ADDR_PIN, 
                        string HAMH_ADD_CONTPERS_ADDR_PHONE_RES, 
                        string HAMH_ADD_CONTPERS_ADDR_PHONE_OFF, 
                        string HAMH_VD_OWN_VEHICLE_FLAG, 
                        string HAMH_VD_VEHICLE_REG_NUMBER, 
                        string HAMH_VD_VEHICLE_MAKE, 
                        string HAMH_VD_DL_NUMBER, 
                        string HAMH_VD_PASSPORT_NUMBER, 
                        string HAMH_VD_PAN_CARD_NUMBER, 
                        byte[] HAMH_MY_PHOTO, 
                        decimal HAMH_INTERVIEW_DONE_BY_ECODE, 
                        string HAMH_INTERVIEW_REMARKS, 
                        System.DateTime HAMH_INTERVIEW_DATE, 
                        System.DateTime HAMH_LEFT_DATE, 
                        string HAMH_LEFT_REASON, 
                        string HAMH_LEFT_APPROVAL_FLAG, 
                        decimal HAMH_LEFT_APPROVAL_ECODE, 
                        string HAMH_EORA_TYPE, 
                        decimal HAMH_EORA_CODE, 
                        decimal HAMH_APPROVAL_NO, 
                        System.DateTime HAMH_APPROVAL_DATE, 
                        string HAMH_APPL_PENDING_REASON, 
                        string HAMH_WORKING_STATUS, 
                        string HAMH_CREATED_BY, 
                        System.DateTime HAMH_CREATED_DATE, 
                        string HAMH_MODIFIED_BY, 
                        System.DateTime HAMH_MODIFIED_DATE, 
                        decimal HAED_APPL_NUMBER, 
                        string HAED_SSC_NUMBER, 
                        string HAED_NAME, 
                        System.DateTime HAED_DATEOFBIRTH, 
                        string HAED_FATHER_NAME, 
                        string DEPT_ID, 
                        decimal DESG_ID) {
                MainHead1Row rowMainHead1Row = ((MainHead1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        HAMH_COMPANY_CODE,
                        HAMH_BRANCH_CODE,
                        HAMH_APPL_NUMBER,
                        HAMH_APPL_DATE,
                        HAMH_RECRUITMENT_SOURCE_CODE,
                        HAMH_RECRUITMENT_SOURCE_DELT_CODE,
                        HAMH_RECRUITMENT_SOURCE_ECODE,
                        HAMH_NAME,
                        HAMH_FORH,
                        HAMH_FORH_NAME,
                        HAMH_DOJ,
                        HAMH_DOB,
                        HAMH_NATIVE_PLACE,
                        HAMH_SEX,
                        HAMH_NAIONALITY,
                        HAMH_RELIGION,
                        HAMH_MATRITAL_STATUS,
                        HAMH_MARRIAGE_DATE,
                        HAMH_NOMINIEE_NAME,
                        HAMH_NOMINIEE_RELATION,
                        HAMH_PD_HEIGHT,
                        HAMH_PD_WEIGHT,
                        HAMH_PD_BLOOD_GROUP_CODE,
                        HAMH_PD_PHYSICAL_DISABILITY,
                        HAMH_PD_PROLONGED_ILLNESS,
                        HAMH_PD_PROLONGED_ILLNESS_PERIOD,
                        HAMH_ADD_PRES_ADDR_HNO,
                        HAMH_ADD_PRES_ADDR_LANDMARK,
                        HAMH_ADD_PRES_ADDR_VILL_OR_TOWN,
                        HAMH_ADD_PRES_ADDR_MANDAL,
                        HAMH_ADD_PRES_ADDR_DISTRICT,
                        HAMH_ADD_PRES_ADDR_STATE,
                        HAMH_ADD_PRES_ADDR_PIN,
                        HAMH_ADD_PRES_ADDR_PHONE,
                        HAMH_ADD_PERM_ADDR_HNO,
                        HAMH_ADD_PERM_ADDR_LANDMARK,
                        HAMH_ADD_PERM_ADDR_VILL_OR_TOWN,
                        HAMH_ADD_PERM_ADDR_MANDAL,
                        HAMH_ADD_PERM_ADDR_DISTRICT,
                        HAMH_ADD_PERM_ADDR_STATE,
                        HAMH_ADD_PERM_ADDR_PIN,
                        HAMH_ADD_PERM_ADDR_PHONE,
                        HAMH_ADD_CONTPERS_NAME,
                        HAMH_ADD_CONTPERS_ADDR_HNO,
                        HAMH_ADD_CONTPERS_ADDR_LANDMARK,
                        HAMH_ADD_CONTPERS_ADDR_VILL_OR_TOWN,
                        HAMH_ADD_CONTPERS_ADDR_MANDAL,
                        HAMH_ADD_CONTPERS_ADDR_DISTRICT,
                        HAMH_ADD_CONTPERS_ADDR_STATE,
                        HAMH_ADD_CONTPERS_ADDR_PIN,
                        HAMH_ADD_CONTPERS_ADDR_PHONE_RES,
                        HAMH_ADD_CONTPERS_ADDR_PHONE_OFF,
                        HAMH_VD_OWN_VEHICLE_FLAG,
                        HAMH_VD_VEHICLE_REG_NUMBER,
                        HAMH_VD_VEHICLE_MAKE,
                        HAMH_VD_DL_NUMBER,
                        HAMH_VD_PASSPORT_NUMBER,
                        HAMH_VD_PAN_CARD_NUMBER,
                        HAMH_MY_PHOTO,
                        HAMH_INTERVIEW_DONE_BY_ECODE,
                        HAMH_INTERVIEW_REMARKS,
                        HAMH_INTERVIEW_DATE,
                        HAMH_LEFT_DATE,
                        HAMH_LEFT_REASON,
                        HAMH_LEFT_APPROVAL_FLAG,
                        HAMH_LEFT_APPROVAL_ECODE,
                        HAMH_EORA_TYPE,
                        HAMH_EORA_CODE,
                        HAMH_APPROVAL_NO,
                        HAMH_APPROVAL_DATE,
                        HAMH_APPL_PENDING_REASON,
                        HAMH_WORKING_STATUS,
                        HAMH_CREATED_BY,
                        HAMH_CREATED_DATE,
                        HAMH_MODIFIED_BY,
                        HAMH_MODIFIED_DATE,
                        HAED_APPL_NUMBER,
                        HAED_SSC_NUMBER,
                        HAED_NAME,
                        HAED_DATEOFBIRTH,
                        HAED_FATHER_NAME,
                        DEPT_ID,
                        DESG_ID};
                rowMainHead1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowMainHead1Row);
                return rowMainHead1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MainHead1Row FindByHAMH_COMPANY_CODEHAMH_BRANCH_CODEHAMH_APPL_NUMBER(string HAMH_COMPANY_CODE, string HAMH_BRANCH_CODE, decimal HAMH_APPL_NUMBER) {
                return ((MainHead1Row)(this.Rows.Find(new object[] {
                            HAMH_COMPANY_CODE,
                            HAMH_BRANCH_CODE,
                            HAMH_APPL_NUMBER})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MainHead1DataTable cln = ((MainHead1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MainHead1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnHAMH_COMPANY_CODE = base.Columns["HAMH_COMPANY_CODE"];
                this.columnHAMH_BRANCH_CODE = base.Columns["HAMH_BRANCH_CODE"];
                this.columnHAMH_APPL_NUMBER = base.Columns["HAMH_APPL_NUMBER"];
                this.columnHAMH_APPL_DATE = base.Columns["HAMH_APPL_DATE"];
                this.columnHAMH_RECRUITMENT_SOURCE_CODE = base.Columns["HAMH_RECRUITMENT_SOURCE_CODE"];
                this.columnHAMH_RECRUITMENT_SOURCE_DELT_CODE = base.Columns["HAMH_RECRUITMENT_SOURCE_DELT_CODE"];
                this.columnHAMH_RECRUITMENT_SOURCE_ECODE = base.Columns["HAMH_RECRUITMENT_SOURCE_ECODE"];
                this.columnHAMH_NAME = base.Columns["HAMH_NAME"];
                this.columnHAMH_FORH = base.Columns["HAMH_FORH"];
                this.columnHAMH_FORH_NAME = base.Columns["HAMH_FORH_NAME"];
                this.columnHAMH_DOJ = base.Columns["HAMH_DOJ"];
                this.columnHAMH_DOB = base.Columns["HAMH_DOB"];
                this.columnHAMH_NATIVE_PLACE = base.Columns["HAMH_NATIVE_PLACE"];
                this.columnHAMH_SEX = base.Columns["HAMH_SEX"];
                this.columnHAMH_NAIONALITY = base.Columns["HAMH_NAIONALITY"];
                this.columnHAMH_RELIGION = base.Columns["HAMH_RELIGION"];
                this.columnHAMH_MATRITAL_STATUS = base.Columns["HAMH_MATRITAL_STATUS"];
                this.columnHAMH_MARRIAGE_DATE = base.Columns["HAMH_MARRIAGE_DATE"];
                this.columnHAMH_NOMINIEE_NAME = base.Columns["HAMH_NOMINIEE_NAME"];
                this.columnHAMH_NOMINIEE_RELATION = base.Columns["HAMH_NOMINIEE_RELATION"];
                this.columnHAMH_PD_HEIGHT = base.Columns["HAMH_PD_HEIGHT"];
                this.columnHAMH_PD_WEIGHT = base.Columns["HAMH_PD_WEIGHT"];
                this.columnHAMH_PD_BLOOD_GROUP_CODE = base.Columns["HAMH_PD_BLOOD_GROUP_CODE"];
                this.columnHAMH_PD_PHYSICAL_DISABILITY = base.Columns["HAMH_PD_PHYSICAL_DISABILITY"];
                this.columnHAMH_PD_PROLONGED_ILLNESS = base.Columns["HAMH_PD_PROLONGED_ILLNESS"];
                this.columnHAMH_PD_PROLONGED_ILLNESS_PERIOD = base.Columns["HAMH_PD_PROLONGED_ILLNESS_PERIOD"];
                this.columnHAMH_ADD_PRES_ADDR_HNO = base.Columns["HAMH_ADD_PRES_ADDR_HNO"];
                this.columnHAMH_ADD_PRES_ADDR_LANDMARK = base.Columns["HAMH_ADD_PRES_ADDR_LANDMARK"];
                this.columnHAMH_ADD_PRES_ADDR_VILL_OR_TOWN = base.Columns["HAMH_ADD_PRES_ADDR_VILL_OR_TOWN"];
                this.columnHAMH_ADD_PRES_ADDR_MANDAL = base.Columns["HAMH_ADD_PRES_ADDR_MANDAL"];
                this.columnHAMH_ADD_PRES_ADDR_DISTRICT = base.Columns["HAMH_ADD_PRES_ADDR_DISTRICT"];
                this.columnHAMH_ADD_PRES_ADDR_STATE = base.Columns["HAMH_ADD_PRES_ADDR_STATE"];
                this.columnHAMH_ADD_PRES_ADDR_PIN = base.Columns["HAMH_ADD_PRES_ADDR_PIN"];
                this.columnHAMH_ADD_PRES_ADDR_PHONE = base.Columns["HAMH_ADD_PRES_ADDR_PHONE"];
                this.columnHAMH_ADD_PERM_ADDR_HNO = base.Columns["HAMH_ADD_PERM_ADDR_HNO"];
                this.columnHAMH_ADD_PERM_ADDR_LANDMARK = base.Columns["HAMH_ADD_PERM_ADDR_LANDMARK"];
                this.columnHAMH_ADD_PERM_ADDR_VILL_OR_TOWN = base.Columns["HAMH_ADD_PERM_ADDR_VILL_OR_TOWN"];
                this.columnHAMH_ADD_PERM_ADDR_MANDAL = base.Columns["HAMH_ADD_PERM_ADDR_MANDAL"];
                this.columnHAMH_ADD_PERM_ADDR_DISTRICT = base.Columns["HAMH_ADD_PERM_ADDR_DISTRICT"];
                this.columnHAMH_ADD_PERM_ADDR_STATE = base.Columns["HAMH_ADD_PERM_ADDR_STATE"];
                this.columnHAMH_ADD_PERM_ADDR_PIN = base.Columns["HAMH_ADD_PERM_ADDR_PIN"];
                this.columnHAMH_ADD_PERM_ADDR_PHONE = base.Columns["HAMH_ADD_PERM_ADDR_PHONE"];
                this.columnHAMH_ADD_CONTPERS_NAME = base.Columns["HAMH_ADD_CONTPERS_NAME"];
                this.columnHAMH_ADD_CONTPERS_ADDR_HNO = base.Columns["HAMH_ADD_CONTPERS_ADDR_HNO"];
                this.columnHAMH_ADD_CONTPERS_ADDR_LANDMARK = base.Columns["HAMH_ADD_CONTPERS_ADDR_LANDMARK"];
                this.columnHAMH_ADD_CONTPERS_ADDR_VILL_OR_TOWN = base.Columns["HAMH_ADD_CONTPERS_ADDR_VILL_OR_TOWN"];
                this.columnHAMH_ADD_CONTPERS_ADDR_MANDAL = base.Columns["HAMH_ADD_CONTPERS_ADDR_MANDAL"];
                this.columnHAMH_ADD_CONTPERS_ADDR_DISTRICT = base.Columns["HAMH_ADD_CONTPERS_ADDR_DISTRICT"];
                this.columnHAMH_ADD_CONTPERS_ADDR_STATE = base.Columns["HAMH_ADD_CONTPERS_ADDR_STATE"];
                this.columnHAMH_ADD_CONTPERS_ADDR_PIN = base.Columns["HAMH_ADD_CONTPERS_ADDR_PIN"];
                this.columnHAMH_ADD_CONTPERS_ADDR_PHONE_RES = base.Columns["HAMH_ADD_CONTPERS_ADDR_PHONE_RES"];
                this.columnHAMH_ADD_CONTPERS_ADDR_PHONE_OFF = base.Columns["HAMH_ADD_CONTPERS_ADDR_PHONE_OFF"];
                this.columnHAMH_VD_OWN_VEHICLE_FLAG = base.Columns["HAMH_VD_OWN_VEHICLE_FLAG"];
                this.columnHAMH_VD_VEHICLE_REG_NUMBER = base.Columns["HAMH_VD_VEHICLE_REG_NUMBER"];
                this.columnHAMH_VD_VEHICLE_MAKE = base.Columns["HAMH_VD_VEHICLE_MAKE"];
                this.columnHAMH_VD_DL_NUMBER = base.Columns["HAMH_VD_DL_NUMBER"];
                this.columnHAMH_VD_PASSPORT_NUMBER = base.Columns["HAMH_VD_PASSPORT_NUMBER"];
                this.columnHAMH_VD_PAN_CARD_NUMBER = base.Columns["HAMH_VD_PAN_CARD_NUMBER"];
                this.columnHAMH_MY_PHOTO = base.Columns["HAMH_MY_PHOTO"];
                this.columnHAMH_INTERVIEW_DONE_BY_ECODE = base.Columns["HAMH_INTERVIEW_DONE_BY_ECODE"];
                this.columnHAMH_INTERVIEW_REMARKS = base.Columns["HAMH_INTERVIEW_REMARKS"];
                this.columnHAMH_INTERVIEW_DATE = base.Columns["HAMH_INTERVIEW_DATE"];
                this.columnHAMH_LEFT_DATE = base.Columns["HAMH_LEFT_DATE"];
                this.columnHAMH_LEFT_REASON = base.Columns["HAMH_LEFT_REASON"];
                this.columnHAMH_LEFT_APPROVAL_FLAG = base.Columns["HAMH_LEFT_APPROVAL_FLAG"];
                this.columnHAMH_LEFT_APPROVAL_ECODE = base.Columns["HAMH_LEFT_APPROVAL_ECODE"];
                this.columnHAMH_EORA_TYPE = base.Columns["HAMH_EORA_TYPE"];
                this.columnHAMH_EORA_CODE = base.Columns["HAMH_EORA_CODE"];
                this.columnHAMH_APPROVAL_NO = base.Columns["HAMH_APPROVAL_NO"];
                this.columnHAMH_APPROVAL_DATE = base.Columns["HAMH_APPROVAL_DATE"];
                this.columnHAMH_APPL_PENDING_REASON = base.Columns["HAMH_APPL_PENDING_REASON"];
                this.columnHAMH_WORKING_STATUS = base.Columns["HAMH_WORKING_STATUS"];
                this.columnHAMH_CREATED_BY = base.Columns["HAMH_CREATED_BY"];
                this.columnHAMH_CREATED_DATE = base.Columns["HAMH_CREATED_DATE"];
                this.columnHAMH_MODIFIED_BY = base.Columns["HAMH_MODIFIED_BY"];
                this.columnHAMH_MODIFIED_DATE = base.Columns["HAMH_MODIFIED_DATE"];
                this.columnHAED_APPL_NUMBER = base.Columns["HAED_APPL_NUMBER"];
                this.columnHAED_SSC_NUMBER = base.Columns["HAED_SSC_NUMBER"];
                this.columnHAED_NAME = base.Columns["HAED_NAME"];
                this.columnHAED_DATEOFBIRTH = base.Columns["HAED_DATEOFBIRTH"];
                this.columnHAED_FATHER_NAME = base.Columns["HAED_FATHER_NAME"];
                this.columnDEPT_ID = base.Columns["DEPT_ID"];
                this.columnDESG_ID = base.Columns["DESG_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnHAMH_COMPANY_CODE = new global::System.Data.DataColumn("HAMH_COMPANY_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_COMPANY_CODE);
                this.columnHAMH_BRANCH_CODE = new global::System.Data.DataColumn("HAMH_BRANCH_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_BRANCH_CODE);
                this.columnHAMH_APPL_NUMBER = new global::System.Data.DataColumn("HAMH_APPL_NUMBER", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_APPL_NUMBER);
                this.columnHAMH_APPL_DATE = new global::System.Data.DataColumn("HAMH_APPL_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_APPL_DATE);
                this.columnHAMH_RECRUITMENT_SOURCE_CODE = new global::System.Data.DataColumn("HAMH_RECRUITMENT_SOURCE_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_RECRUITMENT_SOURCE_CODE);
                this.columnHAMH_RECRUITMENT_SOURCE_DELT_CODE = new global::System.Data.DataColumn("HAMH_RECRUITMENT_SOURCE_DELT_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_RECRUITMENT_SOURCE_DELT_CODE);
                this.columnHAMH_RECRUITMENT_SOURCE_ECODE = new global::System.Data.DataColumn("HAMH_RECRUITMENT_SOURCE_ECODE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_RECRUITMENT_SOURCE_ECODE);
                this.columnHAMH_NAME = new global::System.Data.DataColumn("HAMH_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_NAME);
                this.columnHAMH_FORH = new global::System.Data.DataColumn("HAMH_FORH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_FORH);
                this.columnHAMH_FORH_NAME = new global::System.Data.DataColumn("HAMH_FORH_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_FORH_NAME);
                this.columnHAMH_DOJ = new global::System.Data.DataColumn("HAMH_DOJ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_DOJ);
                this.columnHAMH_DOB = new global::System.Data.DataColumn("HAMH_DOB", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_DOB);
                this.columnHAMH_NATIVE_PLACE = new global::System.Data.DataColumn("HAMH_NATIVE_PLACE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_NATIVE_PLACE);
                this.columnHAMH_SEX = new global::System.Data.DataColumn("HAMH_SEX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_SEX);
                this.columnHAMH_NAIONALITY = new global::System.Data.DataColumn("HAMH_NAIONALITY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_NAIONALITY);
                this.columnHAMH_RELIGION = new global::System.Data.DataColumn("HAMH_RELIGION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_RELIGION);
                this.columnHAMH_MATRITAL_STATUS = new global::System.Data.DataColumn("HAMH_MATRITAL_STATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_MATRITAL_STATUS);
                this.columnHAMH_MARRIAGE_DATE = new global::System.Data.DataColumn("HAMH_MARRIAGE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_MARRIAGE_DATE);
                this.columnHAMH_NOMINIEE_NAME = new global::System.Data.DataColumn("HAMH_NOMINIEE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_NOMINIEE_NAME);
                this.columnHAMH_NOMINIEE_RELATION = new global::System.Data.DataColumn("HAMH_NOMINIEE_RELATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_NOMINIEE_RELATION);
                this.columnHAMH_PD_HEIGHT = new global::System.Data.DataColumn("HAMH_PD_HEIGHT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_PD_HEIGHT);
                this.columnHAMH_PD_WEIGHT = new global::System.Data.DataColumn("HAMH_PD_WEIGHT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_PD_WEIGHT);
                this.columnHAMH_PD_BLOOD_GROUP_CODE = new global::System.Data.DataColumn("HAMH_PD_BLOOD_GROUP_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_PD_BLOOD_GROUP_CODE);
                this.columnHAMH_PD_PHYSICAL_DISABILITY = new global::System.Data.DataColumn("HAMH_PD_PHYSICAL_DISABILITY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_PD_PHYSICAL_DISABILITY);
                this.columnHAMH_PD_PROLONGED_ILLNESS = new global::System.Data.DataColumn("HAMH_PD_PROLONGED_ILLNESS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_PD_PROLONGED_ILLNESS);
                this.columnHAMH_PD_PROLONGED_ILLNESS_PERIOD = new global::System.Data.DataColumn("HAMH_PD_PROLONGED_ILLNESS_PERIOD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_PD_PROLONGED_ILLNESS_PERIOD);
                this.columnHAMH_ADD_PRES_ADDR_HNO = new global::System.Data.DataColumn("HAMH_ADD_PRES_ADDR_HNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_ADD_PRES_ADDR_HNO);
                this.columnHAMH_ADD_PRES_ADDR_LANDMARK = new global::System.Data.DataColumn("HAMH_ADD_PRES_ADDR_LANDMARK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_ADD_PRES_ADDR_LANDMARK);
                this.columnHAMH_ADD_PRES_ADDR_VILL_OR_TOWN = new global::System.Data.DataColumn("HAMH_ADD_PRES_ADDR_VILL_OR_TOWN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_ADD_PRES_ADDR_VILL_OR_TOWN);
                this.columnHAMH_ADD_PRES_ADDR_MANDAL = new global::System.Data.DataColumn("HAMH_ADD_PRES_ADDR_MANDAL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_ADD_PRES_ADDR_MANDAL);
                this.columnHAMH_ADD_PRES_ADDR_DISTRICT = new global::System.Data.DataColumn("HAMH_ADD_PRES_ADDR_DISTRICT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_ADD_PRES_ADDR_DISTRICT);
                this.columnHAMH_ADD_PRES_ADDR_STATE = new global::System.Data.DataColumn("HAMH_ADD_PRES_ADDR_STATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_ADD_PRES_ADDR_STATE);
                this.columnHAMH_ADD_PRES_ADDR_PIN = new global::System.Data.DataColumn("HAMH_ADD_PRES_ADDR_PIN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_ADD_PRES_ADDR_PIN);
                this.columnHAMH_ADD_PRES_ADDR_PHONE = new global::System.Data.DataColumn("HAMH_ADD_PRES_ADDR_PHONE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_ADD_PRES_ADDR_PHONE);
                this.columnHAMH_ADD_PERM_ADDR_HNO = new global::System.Data.DataColumn("HAMH_ADD_PERM_ADDR_HNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_ADD_PERM_ADDR_HNO);
                this.columnHAMH_ADD_PERM_ADDR_LANDMARK = new global::System.Data.DataColumn("HAMH_ADD_PERM_ADDR_LANDMARK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_ADD_PERM_ADDR_LANDMARK);
                this.columnHAMH_ADD_PERM_ADDR_VILL_OR_TOWN = new global::System.Data.DataColumn("HAMH_ADD_PERM_ADDR_VILL_OR_TOWN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_ADD_PERM_ADDR_VILL_OR_TOWN);
                this.columnHAMH_ADD_PERM_ADDR_MANDAL = new global::System.Data.DataColumn("HAMH_ADD_PERM_ADDR_MANDAL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_ADD_PERM_ADDR_MANDAL);
                this.columnHAMH_ADD_PERM_ADDR_DISTRICT = new global::System.Data.DataColumn("HAMH_ADD_PERM_ADDR_DISTRICT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_ADD_PERM_ADDR_DISTRICT);
                this.columnHAMH_ADD_PERM_ADDR_STATE = new global::System.Data.DataColumn("HAMH_ADD_PERM_ADDR_STATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_ADD_PERM_ADDR_STATE);
                this.columnHAMH_ADD_PERM_ADDR_PIN = new global::System.Data.DataColumn("HAMH_ADD_PERM_ADDR_PIN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_ADD_PERM_ADDR_PIN);
                this.columnHAMH_ADD_PERM_ADDR_PHONE = new global::System.Data.DataColumn("HAMH_ADD_PERM_ADDR_PHONE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_ADD_PERM_ADDR_PHONE);
                this.columnHAMH_ADD_CONTPERS_NAME = new global::System.Data.DataColumn("HAMH_ADD_CONTPERS_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_ADD_CONTPERS_NAME);
                this.columnHAMH_ADD_CONTPERS_ADDR_HNO = new global::System.Data.DataColumn("HAMH_ADD_CONTPERS_ADDR_HNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_ADD_CONTPERS_ADDR_HNO);
                this.columnHAMH_ADD_CONTPERS_ADDR_LANDMARK = new global::System.Data.DataColumn("HAMH_ADD_CONTPERS_ADDR_LANDMARK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_ADD_CONTPERS_ADDR_LANDMARK);
                this.columnHAMH_ADD_CONTPERS_ADDR_VILL_OR_TOWN = new global::System.Data.DataColumn("HAMH_ADD_CONTPERS_ADDR_VILL_OR_TOWN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_ADD_CONTPERS_ADDR_VILL_OR_TOWN);
                this.columnHAMH_ADD_CONTPERS_ADDR_MANDAL = new global::System.Data.DataColumn("HAMH_ADD_CONTPERS_ADDR_MANDAL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_ADD_CONTPERS_ADDR_MANDAL);
                this.columnHAMH_ADD_CONTPERS_ADDR_DISTRICT = new global::System.Data.DataColumn("HAMH_ADD_CONTPERS_ADDR_DISTRICT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_ADD_CONTPERS_ADDR_DISTRICT);
                this.columnHAMH_ADD_CONTPERS_ADDR_STATE = new global::System.Data.DataColumn("HAMH_ADD_CONTPERS_ADDR_STATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_ADD_CONTPERS_ADDR_STATE);
                this.columnHAMH_ADD_CONTPERS_ADDR_PIN = new global::System.Data.DataColumn("HAMH_ADD_CONTPERS_ADDR_PIN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_ADD_CONTPERS_ADDR_PIN);
                this.columnHAMH_ADD_CONTPERS_ADDR_PHONE_RES = new global::System.Data.DataColumn("HAMH_ADD_CONTPERS_ADDR_PHONE_RES", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_ADD_CONTPERS_ADDR_PHONE_RES);
                this.columnHAMH_ADD_CONTPERS_ADDR_PHONE_OFF = new global::System.Data.DataColumn("HAMH_ADD_CONTPERS_ADDR_PHONE_OFF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_ADD_CONTPERS_ADDR_PHONE_OFF);
                this.columnHAMH_VD_OWN_VEHICLE_FLAG = new global::System.Data.DataColumn("HAMH_VD_OWN_VEHICLE_FLAG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_VD_OWN_VEHICLE_FLAG);
                this.columnHAMH_VD_VEHICLE_REG_NUMBER = new global::System.Data.DataColumn("HAMH_VD_VEHICLE_REG_NUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_VD_VEHICLE_REG_NUMBER);
                this.columnHAMH_VD_VEHICLE_MAKE = new global::System.Data.DataColumn("HAMH_VD_VEHICLE_MAKE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_VD_VEHICLE_MAKE);
                this.columnHAMH_VD_DL_NUMBER = new global::System.Data.DataColumn("HAMH_VD_DL_NUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_VD_DL_NUMBER);
                this.columnHAMH_VD_PASSPORT_NUMBER = new global::System.Data.DataColumn("HAMH_VD_PASSPORT_NUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_VD_PASSPORT_NUMBER);
                this.columnHAMH_VD_PAN_CARD_NUMBER = new global::System.Data.DataColumn("HAMH_VD_PAN_CARD_NUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_VD_PAN_CARD_NUMBER);
                this.columnHAMH_MY_PHOTO = new global::System.Data.DataColumn("HAMH_MY_PHOTO", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_MY_PHOTO);
                this.columnHAMH_INTERVIEW_DONE_BY_ECODE = new global::System.Data.DataColumn("HAMH_INTERVIEW_DONE_BY_ECODE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_INTERVIEW_DONE_BY_ECODE);
                this.columnHAMH_INTERVIEW_REMARKS = new global::System.Data.DataColumn("HAMH_INTERVIEW_REMARKS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_INTERVIEW_REMARKS);
                this.columnHAMH_INTERVIEW_DATE = new global::System.Data.DataColumn("HAMH_INTERVIEW_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_INTERVIEW_DATE);
                this.columnHAMH_LEFT_DATE = new global::System.Data.DataColumn("HAMH_LEFT_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_LEFT_DATE);
                this.columnHAMH_LEFT_REASON = new global::System.Data.DataColumn("HAMH_LEFT_REASON", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_LEFT_REASON);
                this.columnHAMH_LEFT_APPROVAL_FLAG = new global::System.Data.DataColumn("HAMH_LEFT_APPROVAL_FLAG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_LEFT_APPROVAL_FLAG);
                this.columnHAMH_LEFT_APPROVAL_ECODE = new global::System.Data.DataColumn("HAMH_LEFT_APPROVAL_ECODE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_LEFT_APPROVAL_ECODE);
                this.columnHAMH_EORA_TYPE = new global::System.Data.DataColumn("HAMH_EORA_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_EORA_TYPE);
                this.columnHAMH_EORA_CODE = new global::System.Data.DataColumn("HAMH_EORA_CODE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_EORA_CODE);
                this.columnHAMH_APPROVAL_NO = new global::System.Data.DataColumn("HAMH_APPROVAL_NO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_APPROVAL_NO);
                this.columnHAMH_APPROVAL_DATE = new global::System.Data.DataColumn("HAMH_APPROVAL_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_APPROVAL_DATE);
                this.columnHAMH_APPL_PENDING_REASON = new global::System.Data.DataColumn("HAMH_APPL_PENDING_REASON", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_APPL_PENDING_REASON);
                this.columnHAMH_WORKING_STATUS = new global::System.Data.DataColumn("HAMH_WORKING_STATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_WORKING_STATUS);
                this.columnHAMH_CREATED_BY = new global::System.Data.DataColumn("HAMH_CREATED_BY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_CREATED_BY);
                this.columnHAMH_CREATED_DATE = new global::System.Data.DataColumn("HAMH_CREATED_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_CREATED_DATE);
                this.columnHAMH_MODIFIED_BY = new global::System.Data.DataColumn("HAMH_MODIFIED_BY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_MODIFIED_BY);
                this.columnHAMH_MODIFIED_DATE = new global::System.Data.DataColumn("HAMH_MODIFIED_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAMH_MODIFIED_DATE);
                this.columnHAED_APPL_NUMBER = new global::System.Data.DataColumn("HAED_APPL_NUMBER", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAED_APPL_NUMBER);
                this.columnHAED_SSC_NUMBER = new global::System.Data.DataColumn("HAED_SSC_NUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAED_SSC_NUMBER);
                this.columnHAED_NAME = new global::System.Data.DataColumn("HAED_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAED_NAME);
                this.columnHAED_DATEOFBIRTH = new global::System.Data.DataColumn("HAED_DATEOFBIRTH", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAED_DATEOFBIRTH);
                this.columnHAED_FATHER_NAME = new global::System.Data.DataColumn("HAED_FATHER_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAED_FATHER_NAME);
                this.columnDEPT_ID = new global::System.Data.DataColumn("DEPT_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPT_ID);
                this.columnDESG_ID = new global::System.Data.DataColumn("DESG_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESG_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnHAMH_COMPANY_CODE,
                                this.columnHAMH_BRANCH_CODE,
                                this.columnHAMH_APPL_NUMBER}, true));
                this.columnHAMH_COMPANY_CODE.AllowDBNull = false;
                this.columnHAMH_COMPANY_CODE.MaxLength = 10;
                this.columnHAMH_BRANCH_CODE.AllowDBNull = false;
                this.columnHAMH_BRANCH_CODE.MaxLength = 20;
                this.columnHAMH_APPL_NUMBER.AllowDBNull = false;
                this.columnHAMH_RECRUITMENT_SOURCE_CODE.MaxLength = 30;
                this.columnHAMH_RECRUITMENT_SOURCE_DELT_CODE.MaxLength = 10;
                this.columnHAMH_NAME.MaxLength = 100;
                this.columnHAMH_FORH.MaxLength = 10;
                this.columnHAMH_FORH_NAME.MaxLength = 100;
                this.columnHAMH_NATIVE_PLACE.MaxLength = 50;
                this.columnHAMH_SEX.MaxLength = 10;
                this.columnHAMH_NAIONALITY.MaxLength = 20;
                this.columnHAMH_RELIGION.MaxLength = 20;
                this.columnHAMH_MATRITAL_STATUS.MaxLength = 10;
                this.columnHAMH_NOMINIEE_NAME.MaxLength = 50;
                this.columnHAMH_NOMINIEE_RELATION.MaxLength = 30;
                this.columnHAMH_PD_BLOOD_GROUP_CODE.MaxLength = 10;
                this.columnHAMH_PD_PHYSICAL_DISABILITY.MaxLength = 100;
                this.columnHAMH_PD_PROLONGED_ILLNESS.MaxLength = 100;
                this.columnHAMH_PD_PROLONGED_ILLNESS_PERIOD.MaxLength = 20;
                this.columnHAMH_ADD_PRES_ADDR_HNO.MaxLength = 50;
                this.columnHAMH_ADD_PRES_ADDR_LANDMARK.MaxLength = 50;
                this.columnHAMH_ADD_PRES_ADDR_VILL_OR_TOWN.MaxLength = 50;
                this.columnHAMH_ADD_PRES_ADDR_MANDAL.MaxLength = 50;
                this.columnHAMH_ADD_PRES_ADDR_DISTRICT.MaxLength = 50;
                this.columnHAMH_ADD_PRES_ADDR_STATE.MaxLength = 50;
                this.columnHAMH_ADD_PRES_ADDR_PHONE.MaxLength = 15;
                this.columnHAMH_ADD_PERM_ADDR_HNO.MaxLength = 50;
                this.columnHAMH_ADD_PERM_ADDR_LANDMARK.MaxLength = 50;
                this.columnHAMH_ADD_PERM_ADDR_VILL_OR_TOWN.MaxLength = 50;
                this.columnHAMH_ADD_PERM_ADDR_MANDAL.MaxLength = 50;
                this.columnHAMH_ADD_PERM_ADDR_DISTRICT.MaxLength = 50;
                this.columnHAMH_ADD_PERM_ADDR_STATE.MaxLength = 50;
                this.columnHAMH_ADD_PERM_ADDR_PHONE.MaxLength = 15;
                this.columnHAMH_ADD_CONTPERS_NAME.MaxLength = 50;
                this.columnHAMH_ADD_CONTPERS_ADDR_HNO.MaxLength = 50;
                this.columnHAMH_ADD_CONTPERS_ADDR_LANDMARK.MaxLength = 50;
                this.columnHAMH_ADD_CONTPERS_ADDR_VILL_OR_TOWN.MaxLength = 50;
                this.columnHAMH_ADD_CONTPERS_ADDR_MANDAL.MaxLength = 50;
                this.columnHAMH_ADD_CONTPERS_ADDR_DISTRICT.MaxLength = 50;
                this.columnHAMH_ADD_CONTPERS_ADDR_STATE.MaxLength = 50;
                this.columnHAMH_ADD_CONTPERS_ADDR_PHONE_RES.MaxLength = 15;
                this.columnHAMH_ADD_CONTPERS_ADDR_PHONE_OFF.MaxLength = 15;
                this.columnHAMH_VD_OWN_VEHICLE_FLAG.MaxLength = 5;
                this.columnHAMH_VD_VEHICLE_REG_NUMBER.MaxLength = 15;
                this.columnHAMH_VD_VEHICLE_MAKE.MaxLength = 15;
                this.columnHAMH_VD_DL_NUMBER.MaxLength = 15;
                this.columnHAMH_VD_PASSPORT_NUMBER.MaxLength = 15;
                this.columnHAMH_VD_PAN_CARD_NUMBER.MaxLength = 15;
                this.columnHAMH_INTERVIEW_REMARKS.MaxLength = 100;
                this.columnHAMH_LEFT_REASON.MaxLength = 100;
                this.columnHAMH_LEFT_APPROVAL_FLAG.MaxLength = 5;
                this.columnHAMH_EORA_TYPE.MaxLength = 10;
                this.columnHAMH_APPL_PENDING_REASON.MaxLength = 50;
                this.columnHAMH_WORKING_STATUS.MaxLength = 2;
                this.columnHAMH_CREATED_BY.MaxLength = 10;
                this.columnHAMH_MODIFIED_BY.MaxLength = 10;
                this.columnHAED_SSC_NUMBER.MaxLength = 50;
                this.columnHAED_NAME.MaxLength = 50;
                this.columnHAED_FATHER_NAME.MaxLength = 50;
                this.columnDEPT_ID.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MainHead1Row NewMainHead1Row() {
                return ((MainHead1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MainHead1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MainHead1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MainHead1RowChanged != null)) {
                    this.MainHead1RowChanged(this, new MainHead1RowChangeEvent(((MainHead1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MainHead1RowChanging != null)) {
                    this.MainHead1RowChanging(this, new MainHead1RowChangeEvent(((MainHead1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MainHead1RowDeleted != null)) {
                    this.MainHead1RowDeleted(this, new MainHead1RowChangeEvent(((MainHead1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MainHead1RowDeleting != null)) {
                    this.MainHead1RowDeleting(this, new MainHead1RowChangeEvent(((MainHead1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMainHead1Row(MainHead1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSEmployee ds = new DSEmployee();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MainHead1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EducationDataTable : global::System.Data.TypedTableBase<EducationRow> {
            
            private global::System.Data.DataColumn columnSLNO_edu;
            
            private global::System.Data.DataColumn columnExamPass;
            
            private global::System.Data.DataColumn columnExamType;
            
            private global::System.Data.DataColumn columnYearPass;
            
            private global::System.Data.DataColumn columnInstName;
            
            private global::System.Data.DataColumn columnInstLocation;
            
            private global::System.Data.DataColumn columnSubject;
            
            private global::System.Data.DataColumn columnUniversity;
            
            private global::System.Data.DataColumn columnPerofPass;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EducationDataTable() {
                this.TableName = "Education";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EducationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EducationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SLNO_eduColumn {
                get {
                    return this.columnSLNO_edu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamPassColumn {
                get {
                    return this.columnExamPass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamTypeColumn {
                get {
                    return this.columnExamType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YearPassColumn {
                get {
                    return this.columnYearPass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstNameColumn {
                get {
                    return this.columnInstName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstLocationColumn {
                get {
                    return this.columnInstLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubjectColumn {
                get {
                    return this.columnSubject;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UniversityColumn {
                get {
                    return this.columnUniversity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PerofPassColumn {
                get {
                    return this.columnPerofPass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EducationRow this[int index] {
                get {
                    return ((EducationRow)(this.Rows[index]));
                }
            }
            
            public event EducationRowChangeEventHandler EducationRowChanging;
            
            public event EducationRowChangeEventHandler EducationRowChanged;
            
            public event EducationRowChangeEventHandler EducationRowDeleting;
            
            public event EducationRowChangeEventHandler EducationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEducationRow(EducationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EducationRow AddEducationRow(decimal SLNO_edu, string ExamPass, string ExamType, decimal YearPass, string InstName, string InstLocation, string Subject, string University, decimal PerofPass) {
                EducationRow rowEducationRow = ((EducationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SLNO_edu,
                        ExamPass,
                        ExamType,
                        YearPass,
                        InstName,
                        InstLocation,
                        Subject,
                        University,
                        PerofPass};
                rowEducationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEducationRow);
                return rowEducationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                EducationDataTable cln = ((EducationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EducationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSLNO_edu = base.Columns["SLNO_edu"];
                this.columnExamPass = base.Columns["ExamPass"];
                this.columnExamType = base.Columns["ExamType"];
                this.columnYearPass = base.Columns["YearPass"];
                this.columnInstName = base.Columns["InstName"];
                this.columnInstLocation = base.Columns["InstLocation"];
                this.columnSubject = base.Columns["Subject"];
                this.columnUniversity = base.Columns["University"];
                this.columnPerofPass = base.Columns["PerofPass"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSLNO_edu = new global::System.Data.DataColumn("SLNO_edu", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSLNO_edu);
                this.columnExamPass = new global::System.Data.DataColumn("ExamPass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamPass);
                this.columnExamType = new global::System.Data.DataColumn("ExamType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamType);
                this.columnYearPass = new global::System.Data.DataColumn("YearPass", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYearPass);
                this.columnInstName = new global::System.Data.DataColumn("InstName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstName);
                this.columnInstLocation = new global::System.Data.DataColumn("InstLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstLocation);
                this.columnSubject = new global::System.Data.DataColumn("Subject", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubject);
                this.columnUniversity = new global::System.Data.DataColumn("University", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUniversity);
                this.columnPerofPass = new global::System.Data.DataColumn("PerofPass", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerofPass);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EducationRow NewEducationRow() {
                return ((EducationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EducationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(EducationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EducationRowChanged != null)) {
                    this.EducationRowChanged(this, new EducationRowChangeEvent(((EducationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EducationRowChanging != null)) {
                    this.EducationRowChanging(this, new EducationRowChangeEvent(((EducationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EducationRowDeleted != null)) {
                    this.EducationRowDeleted(this, new EducationRowChangeEvent(((EducationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EducationRowDeleting != null)) {
                    this.EducationRowDeleting(this, new EducationRowChangeEvent(((EducationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEducationRow(EducationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSEmployee ds = new DSEmployee();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EducationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ShortCourseDataTable : global::System.Data.TypedTableBase<ShortCourseRow> {
            
            private global::System.Data.DataColumn columnSLNO_sc;
            
            private global::System.Data.DataColumn columnCourseName;
            
            private global::System.Data.DataColumn columnYearofPass;
            
            private global::System.Data.DataColumn columnInsti_name;
            
            private global::System.Data.DataColumn columnInsti_Location;
            
            private global::System.Data.DataColumn columnSubject;
            
            private global::System.Data.DataColumn columnDuration;
            
            private global::System.Data.DataColumn columnPerofMarks;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ShortCourseDataTable() {
                this.TableName = "ShortCourse";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ShortCourseDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ShortCourseDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SLNO_scColumn {
                get {
                    return this.columnSLNO_sc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CourseNameColumn {
                get {
                    return this.columnCourseName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YearofPassColumn {
                get {
                    return this.columnYearofPass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Insti_nameColumn {
                get {
                    return this.columnInsti_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Insti_LocationColumn {
                get {
                    return this.columnInsti_Location;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubjectColumn {
                get {
                    return this.columnSubject;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DurationColumn {
                get {
                    return this.columnDuration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PerofMarksColumn {
                get {
                    return this.columnPerofMarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ShortCourseRow this[int index] {
                get {
                    return ((ShortCourseRow)(this.Rows[index]));
                }
            }
            
            public event ShortCourseRowChangeEventHandler ShortCourseRowChanging;
            
            public event ShortCourseRowChangeEventHandler ShortCourseRowChanged;
            
            public event ShortCourseRowChangeEventHandler ShortCourseRowDeleting;
            
            public event ShortCourseRowChangeEventHandler ShortCourseRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddShortCourseRow(ShortCourseRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ShortCourseRow AddShortCourseRow(decimal SLNO_sc, string CourseName, decimal YearofPass, string Insti_name, string Insti_Location, string Subject, string Duration, decimal PerofMarks) {
                ShortCourseRow rowShortCourseRow = ((ShortCourseRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SLNO_sc,
                        CourseName,
                        YearofPass,
                        Insti_name,
                        Insti_Location,
                        Subject,
                        Duration,
                        PerofMarks};
                rowShortCourseRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowShortCourseRow);
                return rowShortCourseRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ShortCourseDataTable cln = ((ShortCourseDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ShortCourseDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSLNO_sc = base.Columns["SLNO_sc"];
                this.columnCourseName = base.Columns["CourseName"];
                this.columnYearofPass = base.Columns["YearofPass"];
                this.columnInsti_name = base.Columns["Insti_name"];
                this.columnInsti_Location = base.Columns["Insti_Location"];
                this.columnSubject = base.Columns["Subject"];
                this.columnDuration = base.Columns["Duration"];
                this.columnPerofMarks = base.Columns["PerofMarks"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSLNO_sc = new global::System.Data.DataColumn("SLNO_sc", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSLNO_sc);
                this.columnCourseName = new global::System.Data.DataColumn("CourseName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCourseName);
                this.columnYearofPass = new global::System.Data.DataColumn("YearofPass", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYearofPass);
                this.columnInsti_name = new global::System.Data.DataColumn("Insti_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsti_name);
                this.columnInsti_Location = new global::System.Data.DataColumn("Insti_Location", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsti_Location);
                this.columnSubject = new global::System.Data.DataColumn("Subject", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubject);
                this.columnDuration = new global::System.Data.DataColumn("Duration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDuration);
                this.columnPerofMarks = new global::System.Data.DataColumn("PerofMarks", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerofMarks);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ShortCourseRow NewShortCourseRow() {
                return ((ShortCourseRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ShortCourseRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ShortCourseRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ShortCourseRowChanged != null)) {
                    this.ShortCourseRowChanged(this, new ShortCourseRowChangeEvent(((ShortCourseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ShortCourseRowChanging != null)) {
                    this.ShortCourseRowChanging(this, new ShortCourseRowChangeEvent(((ShortCourseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ShortCourseRowDeleted != null)) {
                    this.ShortCourseRowDeleted(this, new ShortCourseRowChangeEvent(((ShortCourseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ShortCourseRowDeleting != null)) {
                    this.ShortCourseRowDeleting(this, new ShortCourseRowChangeEvent(((ShortCourseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveShortCourseRow(ShortCourseRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSEmployee ds = new DSEmployee();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ShortCourseDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CurricularDataTable : global::System.Data.TypedTableBase<CurricularRow> {
            
            private global::System.Data.DataColumn columnSLNO_eca;
            
            private global::System.Data.DataColumn columnTypeofECA;
            
            private global::System.Data.DataColumn columnRemarks;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CurricularDataTable() {
                this.TableName = "Curricular";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CurricularDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CurricularDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SLNO_ecaColumn {
                get {
                    return this.columnSLNO_eca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeofECAColumn {
                get {
                    return this.columnTypeofECA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CurricularRow this[int index] {
                get {
                    return ((CurricularRow)(this.Rows[index]));
                }
            }
            
            public event CurricularRowChangeEventHandler CurricularRowChanging;
            
            public event CurricularRowChangeEventHandler CurricularRowChanged;
            
            public event CurricularRowChangeEventHandler CurricularRowDeleting;
            
            public event CurricularRowChangeEventHandler CurricularRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCurricularRow(CurricularRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CurricularRow AddCurricularRow(decimal SLNO_eca, string TypeofECA, string Remarks) {
                CurricularRow rowCurricularRow = ((CurricularRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SLNO_eca,
                        TypeofECA,
                        Remarks};
                rowCurricularRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCurricularRow);
                return rowCurricularRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CurricularDataTable cln = ((CurricularDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CurricularDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSLNO_eca = base.Columns["SLNO_eca"];
                this.columnTypeofECA = base.Columns["TypeofECA"];
                this.columnRemarks = base.Columns["Remarks"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSLNO_eca = new global::System.Data.DataColumn("SLNO_eca", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSLNO_eca);
                this.columnTypeofECA = new global::System.Data.DataColumn("TypeofECA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeofECA);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CurricularRow NewCurricularRow() {
                return ((CurricularRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CurricularRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CurricularRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CurricularRowChanged != null)) {
                    this.CurricularRowChanged(this, new CurricularRowChangeEvent(((CurricularRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CurricularRowChanging != null)) {
                    this.CurricularRowChanging(this, new CurricularRowChangeEvent(((CurricularRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CurricularRowDeleted != null)) {
                    this.CurricularRowDeleted(this, new CurricularRowChangeEvent(((CurricularRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CurricularRowDeleting != null)) {
                    this.CurricularRowDeleting(this, new CurricularRowChangeEvent(((CurricularRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCurricularRow(CurricularRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSEmployee ds = new DSEmployee();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CurricularDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FamilyDataTable : global::System.Data.TypedTableBase<FamilyRow> {
            
            private global::System.Data.DataColumn columnSLNO;
            
            private global::System.Data.DataColumn columnRelationShip;
            
            private global::System.Data.DataColumn columnsName;
            
            private global::System.Data.DataColumn columnDateofBirth;
            
            private global::System.Data.DataColumn columnResiding;
            
            private global::System.Data.DataColumn columnDepending;
            
            private global::System.Data.DataColumn columnOccupation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FamilyDataTable() {
                this.TableName = "Family";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FamilyDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FamilyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SLNOColumn {
                get {
                    return this.columnSLNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RelationShipColumn {
                get {
                    return this.columnRelationShip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sNameColumn {
                get {
                    return this.columnsName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateofBirthColumn {
                get {
                    return this.columnDateofBirth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResidingColumn {
                get {
                    return this.columnResiding;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DependingColumn {
                get {
                    return this.columnDepending;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OccupationColumn {
                get {
                    return this.columnOccupation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FamilyRow this[int index] {
                get {
                    return ((FamilyRow)(this.Rows[index]));
                }
            }
            
            public event FamilyRowChangeEventHandler FamilyRowChanging;
            
            public event FamilyRowChangeEventHandler FamilyRowChanged;
            
            public event FamilyRowChangeEventHandler FamilyRowDeleting;
            
            public event FamilyRowChangeEventHandler FamilyRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFamilyRow(FamilyRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FamilyRow AddFamilyRow(decimal SLNO, string RelationShip, string sName, System.DateTime DateofBirth, string Residing, string Depending, string Occupation) {
                FamilyRow rowFamilyRow = ((FamilyRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SLNO,
                        RelationShip,
                        sName,
                        DateofBirth,
                        Residing,
                        Depending,
                        Occupation};
                rowFamilyRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFamilyRow);
                return rowFamilyRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FamilyDataTable cln = ((FamilyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FamilyDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSLNO = base.Columns["SLNO"];
                this.columnRelationShip = base.Columns["RelationShip"];
                this.columnsName = base.Columns["sName"];
                this.columnDateofBirth = base.Columns["DateofBirth"];
                this.columnResiding = base.Columns["Residing"];
                this.columnDepending = base.Columns["Depending"];
                this.columnOccupation = base.Columns["Occupation"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSLNO = new global::System.Data.DataColumn("SLNO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSLNO);
                this.columnRelationShip = new global::System.Data.DataColumn("RelationShip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelationShip);
                this.columnsName = new global::System.Data.DataColumn("sName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsName);
                this.columnDateofBirth = new global::System.Data.DataColumn("DateofBirth", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateofBirth);
                this.columnResiding = new global::System.Data.DataColumn("Residing", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResiding);
                this.columnDepending = new global::System.Data.DataColumn("Depending", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepending);
                this.columnOccupation = new global::System.Data.DataColumn("Occupation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOccupation);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FamilyRow NewFamilyRow() {
                return ((FamilyRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FamilyRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FamilyRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FamilyRowChanged != null)) {
                    this.FamilyRowChanged(this, new FamilyRowChangeEvent(((FamilyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FamilyRowChanging != null)) {
                    this.FamilyRowChanging(this, new FamilyRowChangeEvent(((FamilyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FamilyRowDeleted != null)) {
                    this.FamilyRowDeleted(this, new FamilyRowChangeEvent(((FamilyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FamilyRowDeleting != null)) {
                    this.FamilyRowDeleting(this, new FamilyRowChangeEvent(((FamilyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFamilyRow(FamilyRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSEmployee ds = new DSEmployee();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FamilyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ReferenceDataTable : global::System.Data.TypedTableBase<ReferenceRow> {
            
            private global::System.Data.DataColumn columnSlNo_ref;
            
            private global::System.Data.DataColumn columnrefName;
            
            private global::System.Data.DataColumn columnrefOccup;
            
            private global::System.Data.DataColumn columnrefPhoneNo;
            
            private global::System.Data.DataColumn columnHouseNo;
            
            private global::System.Data.DataColumn columnLandMark;
            
            private global::System.Data.DataColumn columnVillage;
            
            private global::System.Data.DataColumn columnMondal;
            
            private global::System.Data.DataColumn columnDistrict;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnPin;
            
            private global::System.Data.DataColumn columnPhoneNoref;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReferenceDataTable() {
                this.TableName = "Reference";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ReferenceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ReferenceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlNo_refColumn {
                get {
                    return this.columnSlNo_ref;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refNameColumn {
                get {
                    return this.columnrefName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refOccupColumn {
                get {
                    return this.columnrefOccup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn refPhoneNoColumn {
                get {
                    return this.columnrefPhoneNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HouseNoColumn {
                get {
                    return this.columnHouseNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LandMarkColumn {
                get {
                    return this.columnLandMark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VillageColumn {
                get {
                    return this.columnVillage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MondalColumn {
                get {
                    return this.columnMondal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictColumn {
                get {
                    return this.columnDistrict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PinColumn {
                get {
                    return this.columnPin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneNorefColumn {
                get {
                    return this.columnPhoneNoref;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReferenceRow this[int index] {
                get {
                    return ((ReferenceRow)(this.Rows[index]));
                }
            }
            
            public event ReferenceRowChangeEventHandler ReferenceRowChanging;
            
            public event ReferenceRowChangeEventHandler ReferenceRowChanged;
            
            public event ReferenceRowChangeEventHandler ReferenceRowDeleting;
            
            public event ReferenceRowChangeEventHandler ReferenceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddReferenceRow(ReferenceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReferenceRow AddReferenceRow(decimal SlNo_ref, string refName, string refOccup, string refPhoneNo, string HouseNo, string LandMark, string Village, string Mondal, string District, string State, decimal Pin, string PhoneNoref) {
                ReferenceRow rowReferenceRow = ((ReferenceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SlNo_ref,
                        refName,
                        refOccup,
                        refPhoneNo,
                        HouseNo,
                        LandMark,
                        Village,
                        Mondal,
                        District,
                        State,
                        Pin,
                        PhoneNoref};
                rowReferenceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowReferenceRow);
                return rowReferenceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ReferenceDataTable cln = ((ReferenceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ReferenceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSlNo_ref = base.Columns["SlNo_ref"];
                this.columnrefName = base.Columns["refName"];
                this.columnrefOccup = base.Columns["refOccup"];
                this.columnrefPhoneNo = base.Columns["refPhoneNo"];
                this.columnHouseNo = base.Columns["HouseNo"];
                this.columnLandMark = base.Columns["LandMark"];
                this.columnVillage = base.Columns["Village"];
                this.columnMondal = base.Columns["Mondal"];
                this.columnDistrict = base.Columns["District"];
                this.columnState = base.Columns["State"];
                this.columnPin = base.Columns["Pin"];
                this.columnPhoneNoref = base.Columns["PhoneNoref"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSlNo_ref = new global::System.Data.DataColumn("SlNo_ref", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlNo_ref);
                this.columnrefName = new global::System.Data.DataColumn("refName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefName);
                this.columnrefOccup = new global::System.Data.DataColumn("refOccup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefOccup);
                this.columnrefPhoneNo = new global::System.Data.DataColumn("refPhoneNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefPhoneNo);
                this.columnHouseNo = new global::System.Data.DataColumn("HouseNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHouseNo);
                this.columnLandMark = new global::System.Data.DataColumn("LandMark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandMark);
                this.columnVillage = new global::System.Data.DataColumn("Village", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVillage);
                this.columnMondal = new global::System.Data.DataColumn("Mondal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMondal);
                this.columnDistrict = new global::System.Data.DataColumn("District", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrict);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnPin = new global::System.Data.DataColumn("Pin", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPin);
                this.columnPhoneNoref = new global::System.Data.DataColumn("PhoneNoref", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoneNoref);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReferenceRow NewReferenceRow() {
                return ((ReferenceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ReferenceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ReferenceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ReferenceRowChanged != null)) {
                    this.ReferenceRowChanged(this, new ReferenceRowChangeEvent(((ReferenceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ReferenceRowChanging != null)) {
                    this.ReferenceRowChanging(this, new ReferenceRowChangeEvent(((ReferenceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ReferenceRowDeleted != null)) {
                    this.ReferenceRowDeleted(this, new ReferenceRowChangeEvent(((ReferenceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ReferenceRowDeleting != null)) {
                    this.ReferenceRowDeleting(this, new ReferenceRowChangeEvent(((ReferenceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveReferenceRow(ReferenceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSEmployee ds = new DSEmployee();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ReferenceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ExperienceDataTable : global::System.Data.TypedTableBase<ExperienceRow> {
            
            private global::System.Data.DataColumn columnSlNo_ex;
            
            private global::System.Data.DataColumn columnOrganisation;
            
            private global::System.Data.DataColumn columnFromDate;
            
            private global::System.Data.DataColumn columnToDate;
            
            private global::System.Data.DataColumn columnHouseNo;
            
            private global::System.Data.DataColumn columnLandMark;
            
            private global::System.Data.DataColumn columnVillageEx;
            
            private global::System.Data.DataColumn columnMondal;
            
            private global::System.Data.DataColumn columnDistrict;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnPin;
            
            private global::System.Data.DataColumn columnJoiningDesg;
            
            private global::System.Data.DataColumn columnLeavingDesg;
            
            private global::System.Data.DataColumn columnSalary;
            
            private global::System.Data.DataColumn columnRemarks_ex;
            
            private global::System.Data.DataColumn columnReasons;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExperienceDataTable() {
                this.TableName = "Experience";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ExperienceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ExperienceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlNo_exColumn {
                get {
                    return this.columnSlNo_ex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrganisationColumn {
                get {
                    return this.columnOrganisation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FromDateColumn {
                get {
                    return this.columnFromDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToDateColumn {
                get {
                    return this.columnToDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HouseNoColumn {
                get {
                    return this.columnHouseNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LandMarkColumn {
                get {
                    return this.columnLandMark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VillageExColumn {
                get {
                    return this.columnVillageEx;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MondalColumn {
                get {
                    return this.columnMondal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictColumn {
                get {
                    return this.columnDistrict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PinColumn {
                get {
                    return this.columnPin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JoiningDesgColumn {
                get {
                    return this.columnJoiningDesg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LeavingDesgColumn {
                get {
                    return this.columnLeavingDesg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalaryColumn {
                get {
                    return this.columnSalary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Remarks_exColumn {
                get {
                    return this.columnRemarks_ex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReasonsColumn {
                get {
                    return this.columnReasons;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExperienceRow this[int index] {
                get {
                    return ((ExperienceRow)(this.Rows[index]));
                }
            }
            
            public event ExperienceRowChangeEventHandler ExperienceRowChanging;
            
            public event ExperienceRowChangeEventHandler ExperienceRowChanged;
            
            public event ExperienceRowChangeEventHandler ExperienceRowDeleting;
            
            public event ExperienceRowChangeEventHandler ExperienceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddExperienceRow(ExperienceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExperienceRow AddExperienceRow(
                        decimal SlNo_ex, 
                        string Organisation, 
                        System.DateTime FromDate, 
                        System.DateTime ToDate, 
                        string HouseNo, 
                        string LandMark, 
                        string VillageEx, 
                        string Mondal, 
                        string District, 
                        string State, 
                        decimal Pin, 
                        string JoiningDesg, 
                        string LeavingDesg, 
                        decimal Salary, 
                        string Remarks_ex, 
                        string Reasons) {
                ExperienceRow rowExperienceRow = ((ExperienceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SlNo_ex,
                        Organisation,
                        FromDate,
                        ToDate,
                        HouseNo,
                        LandMark,
                        VillageEx,
                        Mondal,
                        District,
                        State,
                        Pin,
                        JoiningDesg,
                        LeavingDesg,
                        Salary,
                        Remarks_ex,
                        Reasons};
                rowExperienceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowExperienceRow);
                return rowExperienceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ExperienceDataTable cln = ((ExperienceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ExperienceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSlNo_ex = base.Columns["SlNo_ex"];
                this.columnOrganisation = base.Columns["Organisation"];
                this.columnFromDate = base.Columns["FromDate"];
                this.columnToDate = base.Columns["ToDate"];
                this.columnHouseNo = base.Columns["HouseNo"];
                this.columnLandMark = base.Columns["LandMark"];
                this.columnVillageEx = base.Columns["VillageEx"];
                this.columnMondal = base.Columns["Mondal"];
                this.columnDistrict = base.Columns["District"];
                this.columnState = base.Columns["State"];
                this.columnPin = base.Columns["Pin"];
                this.columnJoiningDesg = base.Columns["JoiningDesg"];
                this.columnLeavingDesg = base.Columns["LeavingDesg"];
                this.columnSalary = base.Columns["Salary"];
                this.columnRemarks_ex = base.Columns["Remarks_ex"];
                this.columnReasons = base.Columns["Reasons"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSlNo_ex = new global::System.Data.DataColumn("SlNo_ex", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlNo_ex);
                this.columnOrganisation = new global::System.Data.DataColumn("Organisation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrganisation);
                this.columnFromDate = new global::System.Data.DataColumn("FromDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromDate);
                this.columnToDate = new global::System.Data.DataColumn("ToDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToDate);
                this.columnHouseNo = new global::System.Data.DataColumn("HouseNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHouseNo);
                this.columnLandMark = new global::System.Data.DataColumn("LandMark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandMark);
                this.columnVillageEx = new global::System.Data.DataColumn("VillageEx", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVillageEx);
                this.columnMondal = new global::System.Data.DataColumn("Mondal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMondal);
                this.columnDistrict = new global::System.Data.DataColumn("District", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrict);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnPin = new global::System.Data.DataColumn("Pin", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPin);
                this.columnJoiningDesg = new global::System.Data.DataColumn("JoiningDesg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJoiningDesg);
                this.columnLeavingDesg = new global::System.Data.DataColumn("LeavingDesg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeavingDesg);
                this.columnSalary = new global::System.Data.DataColumn("Salary", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalary);
                this.columnRemarks_ex = new global::System.Data.DataColumn("Remarks_ex", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks_ex);
                this.columnReasons = new global::System.Data.DataColumn("Reasons", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReasons);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExperienceRow NewExperienceRow() {
                return ((ExperienceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ExperienceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ExperienceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ExperienceRowChanged != null)) {
                    this.ExperienceRowChanged(this, new ExperienceRowChangeEvent(((ExperienceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ExperienceRowChanging != null)) {
                    this.ExperienceRowChanging(this, new ExperienceRowChangeEvent(((ExperienceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ExperienceRowDeleted != null)) {
                    this.ExperienceRowDeleted(this, new ExperienceRowChangeEvent(((ExperienceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ExperienceRowDeleting != null)) {
                    this.ExperienceRowDeleting(this, new ExperienceRowChangeEvent(((ExperienceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveExperienceRow(ExperienceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSEmployee ds = new DSEmployee();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ExperienceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DocumentsDataTable : global::System.Data.TypedTableBase<DocumentsRow> {
            
            private global::System.Data.DataColumn columnSlNo_Doc;
            
            private global::System.Data.DataColumn columnHead;
            
            private global::System.Data.DataColumn columnFlag;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnRemarks_Doc;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DocumentsDataTable() {
                this.TableName = "Documents";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DocumentsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DocumentsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlNo_DocColumn {
                get {
                    return this.columnSlNo_Doc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HeadColumn {
                get {
                    return this.columnHead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FlagColumn {
                get {
                    return this.columnFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Remarks_DocColumn {
                get {
                    return this.columnRemarks_Doc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DocumentsRow this[int index] {
                get {
                    return ((DocumentsRow)(this.Rows[index]));
                }
            }
            
            public event DocumentsRowChangeEventHandler DocumentsRowChanging;
            
            public event DocumentsRowChangeEventHandler DocumentsRowChanged;
            
            public event DocumentsRowChangeEventHandler DocumentsRowDeleting;
            
            public event DocumentsRowChangeEventHandler DocumentsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDocumentsRow(DocumentsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DocumentsRow AddDocumentsRow(decimal SlNo_Doc, string Head, string Flag, System.DateTime Date, string Remarks_Doc) {
                DocumentsRow rowDocumentsRow = ((DocumentsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SlNo_Doc,
                        Head,
                        Flag,
                        Date,
                        Remarks_Doc};
                rowDocumentsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDocumentsRow);
                return rowDocumentsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DocumentsDataTable cln = ((DocumentsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DocumentsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSlNo_Doc = base.Columns["SlNo_Doc"];
                this.columnHead = base.Columns["Head"];
                this.columnFlag = base.Columns["Flag"];
                this.columnDate = base.Columns["Date"];
                this.columnRemarks_Doc = base.Columns["Remarks_Doc"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSlNo_Doc = new global::System.Data.DataColumn("SlNo_Doc", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlNo_Doc);
                this.columnHead = new global::System.Data.DataColumn("Head", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHead);
                this.columnFlag = new global::System.Data.DataColumn("Flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlag);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnRemarks_Doc = new global::System.Data.DataColumn("Remarks_Doc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks_Doc);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DocumentsRow NewDocumentsRow() {
                return ((DocumentsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DocumentsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DocumentsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DocumentsRowChanged != null)) {
                    this.DocumentsRowChanged(this, new DocumentsRowChangeEvent(((DocumentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DocumentsRowChanging != null)) {
                    this.DocumentsRowChanging(this, new DocumentsRowChangeEvent(((DocumentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DocumentsRowDeleted != null)) {
                    this.DocumentsRowDeleted(this, new DocumentsRowChangeEvent(((DocumentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DocumentsRowDeleting != null)) {
                    this.DocumentsRowDeleting(this, new DocumentsRowChangeEvent(((DocumentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDocumentsRow(DocumentsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSEmployee ds = new DSEmployee();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DocumentsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InductionDataTable : global::System.Data.TypedTableBase<InductionRow> {
            
            private global::System.Data.DataColumn columnHAIT_EORA_CODE;
            
            private global::System.Data.DataColumn columnHAIT_TRAINING_STATUS;
            
            private global::System.Data.DataColumn columnHAIT_TRAINER_ECODE;
            
            private global::System.Data.DataColumn columnHAIT_TRAINING_FROM;
            
            private global::System.Data.DataColumn columnHAIT_TRAINING_TO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InductionDataTable() {
                this.TableName = "Induction";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal InductionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected InductionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAIT_EORA_CODEColumn {
                get {
                    return this.columnHAIT_EORA_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAIT_TRAINING_STATUSColumn {
                get {
                    return this.columnHAIT_TRAINING_STATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAIT_TRAINER_ECODEColumn {
                get {
                    return this.columnHAIT_TRAINER_ECODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAIT_TRAINING_FROMColumn {
                get {
                    return this.columnHAIT_TRAINING_FROM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAIT_TRAINING_TOColumn {
                get {
                    return this.columnHAIT_TRAINING_TO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InductionRow this[int index] {
                get {
                    return ((InductionRow)(this.Rows[index]));
                }
            }
            
            public event InductionRowChangeEventHandler InductionRowChanging;
            
            public event InductionRowChangeEventHandler InductionRowChanged;
            
            public event InductionRowChangeEventHandler InductionRowDeleting;
            
            public event InductionRowChangeEventHandler InductionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddInductionRow(InductionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InductionRow AddInductionRow(decimal HAIT_EORA_CODE, string HAIT_TRAINING_STATUS, decimal HAIT_TRAINER_ECODE, System.DateTime HAIT_TRAINING_FROM, System.DateTime HAIT_TRAINING_TO) {
                InductionRow rowInductionRow = ((InductionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        HAIT_EORA_CODE,
                        HAIT_TRAINING_STATUS,
                        HAIT_TRAINER_ECODE,
                        HAIT_TRAINING_FROM,
                        HAIT_TRAINING_TO};
                rowInductionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInductionRow);
                return rowInductionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                InductionDataTable cln = ((InductionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new InductionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnHAIT_EORA_CODE = base.Columns["HAIT_EORA_CODE"];
                this.columnHAIT_TRAINING_STATUS = base.Columns["HAIT_TRAINING_STATUS"];
                this.columnHAIT_TRAINER_ECODE = base.Columns["HAIT_TRAINER_ECODE"];
                this.columnHAIT_TRAINING_FROM = base.Columns["HAIT_TRAINING_FROM"];
                this.columnHAIT_TRAINING_TO = base.Columns["HAIT_TRAINING_TO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnHAIT_EORA_CODE = new global::System.Data.DataColumn("HAIT_EORA_CODE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAIT_EORA_CODE);
                this.columnHAIT_TRAINING_STATUS = new global::System.Data.DataColumn("HAIT_TRAINING_STATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAIT_TRAINING_STATUS);
                this.columnHAIT_TRAINER_ECODE = new global::System.Data.DataColumn("HAIT_TRAINER_ECODE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAIT_TRAINER_ECODE);
                this.columnHAIT_TRAINING_FROM = new global::System.Data.DataColumn("HAIT_TRAINING_FROM", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAIT_TRAINING_FROM);
                this.columnHAIT_TRAINING_TO = new global::System.Data.DataColumn("HAIT_TRAINING_TO", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAIT_TRAINING_TO);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InductionRow NewInductionRow() {
                return ((InductionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new InductionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(InductionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InductionRowChanged != null)) {
                    this.InductionRowChanged(this, new InductionRowChangeEvent(((InductionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InductionRowChanging != null)) {
                    this.InductionRowChanging(this, new InductionRowChangeEvent(((InductionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InductionRowDeleted != null)) {
                    this.InductionRowDeleted(this, new InductionRowChangeEvent(((InductionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InductionRowDeleting != null)) {
                    this.InductionRowDeleting(this, new InductionRowChangeEvent(((InductionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveInductionRow(InductionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSEmployee ds = new DSEmployee();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InductionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EORADataTable : global::System.Data.TypedTableBase<EORARow> {
            
            private global::System.Data.DataColumn columnBRANCH_CODE;
            
            private global::System.Data.DataColumn columnDEPT_ID;
            
            private global::System.Data.DataColumn columnPFNO;
            
            private global::System.Data.DataColumn columnECODE;
            
            private global::System.Data.DataColumn columnMEMBER_NAME;
            
            private global::System.Data.DataColumn columnEORA;
            
            private global::System.Data.DataColumn columnHRIS_EMP_NAME;
            
            private global::System.Data.DataColumn columnEPFWAGE;
            
            private global::System.Data.DataColumn columnDESG_ID;
            
            private global::System.Data.DataColumn columnDESIG;
            
            private global::System.Data.DataColumn columnEMP_DOJ;
            
            private global::System.Data.DataColumn columnEMP_DOB;
            
            private global::System.Data.DataColumn columnFATHER_NAME;
            
            private global::System.Data.DataColumn columnelevel_id;
            
            private global::System.Data.DataColumn columncompany_code;
            
            private global::System.Data.DataColumn columnedu_qualification;
            
            private global::System.Data.DataColumn columnHRIS_DESIG;
            
            private global::System.Data.DataColumn columnBRANCH_NAME;
            
            private global::System.Data.DataColumn columnCM_COMPANY_NAME;
            
            private global::System.Data.DataColumn columnDESIG_NAME;
            
            private global::System.Data.DataColumn columnDEPT_NAME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EORADataTable() {
                this.TableName = "EORA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EORADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EORADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRANCH_CODEColumn {
                get {
                    return this.columnBRANCH_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEPT_IDColumn {
                get {
                    return this.columnDEPT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PFNOColumn {
                get {
                    return this.columnPFNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ECODEColumn {
                get {
                    return this.columnECODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MEMBER_NAMEColumn {
                get {
                    return this.columnMEMBER_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EORAColumn {
                get {
                    return this.columnEORA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HRIS_EMP_NAMEColumn {
                get {
                    return this.columnHRIS_EMP_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EPFWAGEColumn {
                get {
                    return this.columnEPFWAGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESG_IDColumn {
                get {
                    return this.columnDESG_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESIGColumn {
                get {
                    return this.columnDESIG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMP_DOJColumn {
                get {
                    return this.columnEMP_DOJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMP_DOBColumn {
                get {
                    return this.columnEMP_DOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FATHER_NAMEColumn {
                get {
                    return this.columnFATHER_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn elevel_idColumn {
                get {
                    return this.columnelevel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn company_codeColumn {
                get {
                    return this.columncompany_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn edu_qualificationColumn {
                get {
                    return this.columnedu_qualification;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HRIS_DESIGColumn {
                get {
                    return this.columnHRIS_DESIG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRANCH_NAMEColumn {
                get {
                    return this.columnBRANCH_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CM_COMPANY_NAMEColumn {
                get {
                    return this.columnCM_COMPANY_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESIG_NAMEColumn {
                get {
                    return this.columnDESIG_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEPT_NAMEColumn {
                get {
                    return this.columnDEPT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EORARow this[int index] {
                get {
                    return ((EORARow)(this.Rows[index]));
                }
            }
            
            public event EORARowChangeEventHandler EORARowChanging;
            
            public event EORARowChangeEventHandler EORARowChanged;
            
            public event EORARowChangeEventHandler EORARowDeleting;
            
            public event EORARowChangeEventHandler EORARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEORARow(EORARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EORARow AddEORARow(
                        string BRANCH_CODE, 
                        string DEPT_ID, 
                        string PFNO, 
                        decimal ECODE, 
                        string MEMBER_NAME, 
                        string EORA, 
                        string HRIS_EMP_NAME, 
                        decimal EPFWAGE, 
                        decimal DESG_ID, 
                        string DESIG, 
                        System.DateTime EMP_DOJ, 
                        System.DateTime EMP_DOB, 
                        string FATHER_NAME, 
                        decimal elevel_id, 
                        string company_code, 
                        string edu_qualification, 
                        string HRIS_DESIG, 
                        string BRANCH_NAME, 
                        string CM_COMPANY_NAME, 
                        string DESIG_NAME, 
                        string DEPT_NAME) {
                EORARow rowEORARow = ((EORARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BRANCH_CODE,
                        DEPT_ID,
                        PFNO,
                        ECODE,
                        MEMBER_NAME,
                        EORA,
                        HRIS_EMP_NAME,
                        EPFWAGE,
                        DESG_ID,
                        DESIG,
                        EMP_DOJ,
                        EMP_DOB,
                        FATHER_NAME,
                        elevel_id,
                        company_code,
                        edu_qualification,
                        HRIS_DESIG,
                        BRANCH_NAME,
                        CM_COMPANY_NAME,
                        DESIG_NAME,
                        DEPT_NAME};
                rowEORARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEORARow);
                return rowEORARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                EORADataTable cln = ((EORADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EORADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBRANCH_CODE = base.Columns["BRANCH_CODE"];
                this.columnDEPT_ID = base.Columns["DEPT_ID"];
                this.columnPFNO = base.Columns["PFNO"];
                this.columnECODE = base.Columns["ECODE"];
                this.columnMEMBER_NAME = base.Columns["MEMBER_NAME"];
                this.columnEORA = base.Columns["EORA"];
                this.columnHRIS_EMP_NAME = base.Columns["HRIS_EMP_NAME"];
                this.columnEPFWAGE = base.Columns["EPFWAGE"];
                this.columnDESG_ID = base.Columns["DESG_ID"];
                this.columnDESIG = base.Columns["DESIG"];
                this.columnEMP_DOJ = base.Columns["EMP_DOJ"];
                this.columnEMP_DOB = base.Columns["EMP_DOB"];
                this.columnFATHER_NAME = base.Columns["FATHER_NAME"];
                this.columnelevel_id = base.Columns["elevel_id"];
                this.columncompany_code = base.Columns["company_code"];
                this.columnedu_qualification = base.Columns["edu_qualification"];
                this.columnHRIS_DESIG = base.Columns["HRIS_DESIG"];
                this.columnBRANCH_NAME = base.Columns["BRANCH_NAME"];
                this.columnCM_COMPANY_NAME = base.Columns["CM_COMPANY_NAME"];
                this.columnDESIG_NAME = base.Columns["DESIG_NAME"];
                this.columnDEPT_NAME = base.Columns["DEPT_NAME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBRANCH_CODE = new global::System.Data.DataColumn("BRANCH_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRANCH_CODE);
                this.columnDEPT_ID = new global::System.Data.DataColumn("DEPT_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPT_ID);
                this.columnPFNO = new global::System.Data.DataColumn("PFNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPFNO);
                this.columnECODE = new global::System.Data.DataColumn("ECODE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnECODE);
                this.columnMEMBER_NAME = new global::System.Data.DataColumn("MEMBER_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEMBER_NAME);
                this.columnEORA = new global::System.Data.DataColumn("EORA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEORA);
                this.columnHRIS_EMP_NAME = new global::System.Data.DataColumn("HRIS_EMP_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHRIS_EMP_NAME);
                this.columnEPFWAGE = new global::System.Data.DataColumn("EPFWAGE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPFWAGE);
                this.columnDESG_ID = new global::System.Data.DataColumn("DESG_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESG_ID);
                this.columnDESIG = new global::System.Data.DataColumn("DESIG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESIG);
                this.columnEMP_DOJ = new global::System.Data.DataColumn("EMP_DOJ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMP_DOJ);
                this.columnEMP_DOB = new global::System.Data.DataColumn("EMP_DOB", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMP_DOB);
                this.columnFATHER_NAME = new global::System.Data.DataColumn("FATHER_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFATHER_NAME);
                this.columnelevel_id = new global::System.Data.DataColumn("elevel_id", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnelevel_id);
                this.columncompany_code = new global::System.Data.DataColumn("company_code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany_code);
                this.columnedu_qualification = new global::System.Data.DataColumn("edu_qualification", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnedu_qualification);
                this.columnHRIS_DESIG = new global::System.Data.DataColumn("HRIS_DESIG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHRIS_DESIG);
                this.columnBRANCH_NAME = new global::System.Data.DataColumn("BRANCH_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRANCH_NAME);
                this.columnCM_COMPANY_NAME = new global::System.Data.DataColumn("CM_COMPANY_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCM_COMPANY_NAME);
                this.columnDESIG_NAME = new global::System.Data.DataColumn("DESIG_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESIG_NAME);
                this.columnDEPT_NAME = new global::System.Data.DataColumn("DEPT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPT_NAME);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EORARow NewEORARow() {
                return ((EORARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EORARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(EORARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EORARowChanged != null)) {
                    this.EORARowChanged(this, new EORARowChangeEvent(((EORARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EORARowChanging != null)) {
                    this.EORARowChanging(this, new EORARowChangeEvent(((EORARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EORARowDeleted != null)) {
                    this.EORARowDeleted(this, new EORARowChangeEvent(((EORARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EORARowDeleting != null)) {
                    this.EORARowDeleting(this, new EORARowChangeEvent(((EORARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEORARow(EORARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSEmployee ds = new DSEmployee();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EORADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MainHead11DataTable : global::System.Data.TypedTableBase<MainHead11Row> {
            
            private global::System.Data.DataColumn columnCM_COMPANY_NAME;
            
            private global::System.Data.DataColumn columnBRANCH_NAME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MainHead11DataTable() {
                this.TableName = "MainHead11";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MainHead11DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MainHead11DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CM_COMPANY_NAMEColumn {
                get {
                    return this.columnCM_COMPANY_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRANCH_NAMEColumn {
                get {
                    return this.columnBRANCH_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MainHead11Row this[int index] {
                get {
                    return ((MainHead11Row)(this.Rows[index]));
                }
            }
            
            public event MainHead11RowChangeEventHandler MainHead11RowChanging;
            
            public event MainHead11RowChangeEventHandler MainHead11RowChanged;
            
            public event MainHead11RowChangeEventHandler MainHead11RowDeleting;
            
            public event MainHead11RowChangeEventHandler MainHead11RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMainHead11Row(MainHead11Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MainHead11Row AddMainHead11Row(string CM_COMPANY_NAME, string BRANCH_NAME) {
                MainHead11Row rowMainHead11Row = ((MainHead11Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CM_COMPANY_NAME,
                        BRANCH_NAME};
                rowMainHead11Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowMainHead11Row);
                return rowMainHead11Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MainHead11DataTable cln = ((MainHead11DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MainHead11DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCM_COMPANY_NAME = base.Columns["CM_COMPANY_NAME"];
                this.columnBRANCH_NAME = base.Columns["BRANCH_NAME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCM_COMPANY_NAME = new global::System.Data.DataColumn("CM_COMPANY_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCM_COMPANY_NAME);
                this.columnBRANCH_NAME = new global::System.Data.DataColumn("BRANCH_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRANCH_NAME);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MainHead11Row NewMainHead11Row() {
                return ((MainHead11Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MainHead11Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MainHead11Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MainHead11RowChanged != null)) {
                    this.MainHead11RowChanged(this, new MainHead11RowChangeEvent(((MainHead11Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MainHead11RowChanging != null)) {
                    this.MainHead11RowChanging(this, new MainHead11RowChangeEvent(((MainHead11Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MainHead11RowDeleted != null)) {
                    this.MainHead11RowDeleted(this, new MainHead11RowChangeEvent(((MainHead11Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MainHead11RowDeleting != null)) {
                    this.MainHead11RowDeleting(this, new MainHead11RowChangeEvent(((MainHead11Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMainHead11Row(MainHead11Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSEmployee ds = new DSEmployee();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MainHead11DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MainHead1Row : global::System.Data.DataRow {
            
            private MainHead1DataTable tableMainHead1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MainHead1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMainHead1 = ((MainHead1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_COMPANY_CODE {
                get {
                    return ((string)(this[this.tableMainHead1.HAMH_COMPANY_CODEColumn]));
                }
                set {
                    this[this.tableMainHead1.HAMH_COMPANY_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_BRANCH_CODE {
                get {
                    return ((string)(this[this.tableMainHead1.HAMH_BRANCH_CODEColumn]));
                }
                set {
                    this[this.tableMainHead1.HAMH_BRANCH_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAMH_APPL_NUMBER {
                get {
                    return ((decimal)(this[this.tableMainHead1.HAMH_APPL_NUMBERColumn]));
                }
                set {
                    this[this.tableMainHead1.HAMH_APPL_NUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime HAMH_APPL_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMainHead1.HAMH_APPL_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_APPL_DATE\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_APPL_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_RECRUITMENT_SOURCE_CODE {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_RECRUITMENT_SOURCE_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_RECRUITMENT_SOURCE_CODE\' in table \'MainHead1\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_RECRUITMENT_SOURCE_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_RECRUITMENT_SOURCE_DELT_CODE {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_RECRUITMENT_SOURCE_DELT_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_RECRUITMENT_SOURCE_DELT_CODE\' in table \'MainHead1\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_RECRUITMENT_SOURCE_DELT_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAMH_RECRUITMENT_SOURCE_ECODE {
                get {
                    try {
                        return ((decimal)(this[this.tableMainHead1.HAMH_RECRUITMENT_SOURCE_ECODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_RECRUITMENT_SOURCE_ECODE\' in table \'MainHead1\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_RECRUITMENT_SOURCE_ECODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_NAME {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_NAME\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_FORH {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_FORHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_FORH\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_FORHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_FORH_NAME {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_FORH_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_FORH_NAME\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_FORH_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime HAMH_DOJ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMainHead1.HAMH_DOJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_DOJ\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_DOJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime HAMH_DOB {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMainHead1.HAMH_DOBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_DOB\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_DOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_NATIVE_PLACE {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_NATIVE_PLACEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_NATIVE_PLACE\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_NATIVE_PLACEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_SEX {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_SEXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_SEX\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_SEXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_NAIONALITY {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_NAIONALITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_NAIONALITY\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_NAIONALITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_RELIGION {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_RELIGIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_RELIGION\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_RELIGIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_MATRITAL_STATUS {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_MATRITAL_STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_MATRITAL_STATUS\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_MATRITAL_STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime HAMH_MARRIAGE_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMainHead1.HAMH_MARRIAGE_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_MARRIAGE_DATE\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_MARRIAGE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_NOMINIEE_NAME {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_NOMINIEE_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_NOMINIEE_NAME\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_NOMINIEE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_NOMINIEE_RELATION {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_NOMINIEE_RELATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_NOMINIEE_RELATION\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_NOMINIEE_RELATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAMH_PD_HEIGHT {
                get {
                    try {
                        return ((decimal)(this[this.tableMainHead1.HAMH_PD_HEIGHTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_PD_HEIGHT\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_PD_HEIGHTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAMH_PD_WEIGHT {
                get {
                    try {
                        return ((decimal)(this[this.tableMainHead1.HAMH_PD_WEIGHTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_PD_WEIGHT\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_PD_WEIGHTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_PD_BLOOD_GROUP_CODE {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_PD_BLOOD_GROUP_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_PD_BLOOD_GROUP_CODE\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_PD_BLOOD_GROUP_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_PD_PHYSICAL_DISABILITY {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_PD_PHYSICAL_DISABILITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_PD_PHYSICAL_DISABILITY\' in table \'MainHead1\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_PD_PHYSICAL_DISABILITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_PD_PROLONGED_ILLNESS {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_PD_PROLONGED_ILLNESSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_PD_PROLONGED_ILLNESS\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_PD_PROLONGED_ILLNESSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_PD_PROLONGED_ILLNESS_PERIOD {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_PD_PROLONGED_ILLNESS_PERIODColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_PD_PROLONGED_ILLNESS_PERIOD\' in table \'MainHead1\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_PD_PROLONGED_ILLNESS_PERIODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_ADD_PRES_ADDR_HNO {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_ADD_PRES_ADDR_HNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_ADD_PRES_ADDR_HNO\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_ADD_PRES_ADDR_HNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_ADD_PRES_ADDR_LANDMARK {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_ADD_PRES_ADDR_LANDMARKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_ADD_PRES_ADDR_LANDMARK\' in table \'MainHead1\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_ADD_PRES_ADDR_LANDMARKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_ADD_PRES_ADDR_VILL_OR_TOWN {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_ADD_PRES_ADDR_VILL_OR_TOWNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_ADD_PRES_ADDR_VILL_OR_TOWN\' in table \'MainHead1\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_ADD_PRES_ADDR_VILL_OR_TOWNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_ADD_PRES_ADDR_MANDAL {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_ADD_PRES_ADDR_MANDALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_ADD_PRES_ADDR_MANDAL\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_ADD_PRES_ADDR_MANDALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_ADD_PRES_ADDR_DISTRICT {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_ADD_PRES_ADDR_DISTRICTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_ADD_PRES_ADDR_DISTRICT\' in table \'MainHead1\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_ADD_PRES_ADDR_DISTRICTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_ADD_PRES_ADDR_STATE {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_ADD_PRES_ADDR_STATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_ADD_PRES_ADDR_STATE\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_ADD_PRES_ADDR_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAMH_ADD_PRES_ADDR_PIN {
                get {
                    try {
                        return ((decimal)(this[this.tableMainHead1.HAMH_ADD_PRES_ADDR_PINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_ADD_PRES_ADDR_PIN\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_ADD_PRES_ADDR_PINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_ADD_PRES_ADDR_PHONE {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_ADD_PRES_ADDR_PHONEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_ADD_PRES_ADDR_PHONE\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_ADD_PRES_ADDR_PHONEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_ADD_PERM_ADDR_HNO {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_ADD_PERM_ADDR_HNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_ADD_PERM_ADDR_HNO\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_ADD_PERM_ADDR_HNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_ADD_PERM_ADDR_LANDMARK {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_ADD_PERM_ADDR_LANDMARKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_ADD_PERM_ADDR_LANDMARK\' in table \'MainHead1\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_ADD_PERM_ADDR_LANDMARKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_ADD_PERM_ADDR_VILL_OR_TOWN {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_ADD_PERM_ADDR_VILL_OR_TOWNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_ADD_PERM_ADDR_VILL_OR_TOWN\' in table \'MainHead1\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_ADD_PERM_ADDR_VILL_OR_TOWNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_ADD_PERM_ADDR_MANDAL {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_ADD_PERM_ADDR_MANDALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_ADD_PERM_ADDR_MANDAL\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_ADD_PERM_ADDR_MANDALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_ADD_PERM_ADDR_DISTRICT {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_ADD_PERM_ADDR_DISTRICTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_ADD_PERM_ADDR_DISTRICT\' in table \'MainHead1\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_ADD_PERM_ADDR_DISTRICTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_ADD_PERM_ADDR_STATE {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_ADD_PERM_ADDR_STATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_ADD_PERM_ADDR_STATE\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_ADD_PERM_ADDR_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAMH_ADD_PERM_ADDR_PIN {
                get {
                    try {
                        return ((decimal)(this[this.tableMainHead1.HAMH_ADD_PERM_ADDR_PINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_ADD_PERM_ADDR_PIN\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_ADD_PERM_ADDR_PINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_ADD_PERM_ADDR_PHONE {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_ADD_PERM_ADDR_PHONEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_ADD_PERM_ADDR_PHONE\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_ADD_PERM_ADDR_PHONEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_ADD_CONTPERS_NAME {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_ADD_CONTPERS_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_ADD_CONTPERS_NAME\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_ADD_CONTPERS_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_ADD_CONTPERS_ADDR_HNO {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_ADD_CONTPERS_ADDR_HNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_ADD_CONTPERS_ADDR_HNO\' in table \'MainHead1\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_ADD_CONTPERS_ADDR_HNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_ADD_CONTPERS_ADDR_LANDMARK {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_ADD_CONTPERS_ADDR_LANDMARKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_ADD_CONTPERS_ADDR_LANDMARK\' in table \'MainHead1\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_ADD_CONTPERS_ADDR_LANDMARKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_ADD_CONTPERS_ADDR_VILL_OR_TOWN {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_ADD_CONTPERS_ADDR_VILL_OR_TOWNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_ADD_CONTPERS_ADDR_VILL_OR_TOWN\' in table \'MainHead1\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_ADD_CONTPERS_ADDR_VILL_OR_TOWNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_ADD_CONTPERS_ADDR_MANDAL {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_ADD_CONTPERS_ADDR_MANDALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_ADD_CONTPERS_ADDR_MANDAL\' in table \'MainHead1\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_ADD_CONTPERS_ADDR_MANDALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_ADD_CONTPERS_ADDR_DISTRICT {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_ADD_CONTPERS_ADDR_DISTRICTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_ADD_CONTPERS_ADDR_DISTRICT\' in table \'MainHead1\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_ADD_CONTPERS_ADDR_DISTRICTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_ADD_CONTPERS_ADDR_STATE {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_ADD_CONTPERS_ADDR_STATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_ADD_CONTPERS_ADDR_STATE\' in table \'MainHead1\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_ADD_CONTPERS_ADDR_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAMH_ADD_CONTPERS_ADDR_PIN {
                get {
                    try {
                        return ((decimal)(this[this.tableMainHead1.HAMH_ADD_CONTPERS_ADDR_PINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_ADD_CONTPERS_ADDR_PIN\' in table \'MainHead1\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_ADD_CONTPERS_ADDR_PINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_ADD_CONTPERS_ADDR_PHONE_RES {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_ADD_CONTPERS_ADDR_PHONE_RESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_ADD_CONTPERS_ADDR_PHONE_RES\' in table \'MainHead1\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_ADD_CONTPERS_ADDR_PHONE_RESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_ADD_CONTPERS_ADDR_PHONE_OFF {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_ADD_CONTPERS_ADDR_PHONE_OFFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_ADD_CONTPERS_ADDR_PHONE_OFF\' in table \'MainHead1\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_ADD_CONTPERS_ADDR_PHONE_OFFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_VD_OWN_VEHICLE_FLAG {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_VD_OWN_VEHICLE_FLAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_VD_OWN_VEHICLE_FLAG\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_VD_OWN_VEHICLE_FLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_VD_VEHICLE_REG_NUMBER {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_VD_VEHICLE_REG_NUMBERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_VD_VEHICLE_REG_NUMBER\' in table \'MainHead1\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_VD_VEHICLE_REG_NUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_VD_VEHICLE_MAKE {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_VD_VEHICLE_MAKEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_VD_VEHICLE_MAKE\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_VD_VEHICLE_MAKEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_VD_DL_NUMBER {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_VD_DL_NUMBERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_VD_DL_NUMBER\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_VD_DL_NUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_VD_PASSPORT_NUMBER {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_VD_PASSPORT_NUMBERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_VD_PASSPORT_NUMBER\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_VD_PASSPORT_NUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_VD_PAN_CARD_NUMBER {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_VD_PAN_CARD_NUMBERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_VD_PAN_CARD_NUMBER\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_VD_PAN_CARD_NUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] HAMH_MY_PHOTO {
                get {
                    try {
                        return ((byte[])(this[this.tableMainHead1.HAMH_MY_PHOTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_MY_PHOTO\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_MY_PHOTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAMH_INTERVIEW_DONE_BY_ECODE {
                get {
                    try {
                        return ((decimal)(this[this.tableMainHead1.HAMH_INTERVIEW_DONE_BY_ECODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_INTERVIEW_DONE_BY_ECODE\' in table \'MainHead1\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_INTERVIEW_DONE_BY_ECODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_INTERVIEW_REMARKS {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_INTERVIEW_REMARKSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_INTERVIEW_REMARKS\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_INTERVIEW_REMARKSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime HAMH_INTERVIEW_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMainHead1.HAMH_INTERVIEW_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_INTERVIEW_DATE\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_INTERVIEW_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime HAMH_LEFT_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMainHead1.HAMH_LEFT_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_LEFT_DATE\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_LEFT_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_LEFT_REASON {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_LEFT_REASONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_LEFT_REASON\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_LEFT_REASONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_LEFT_APPROVAL_FLAG {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_LEFT_APPROVAL_FLAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_LEFT_APPROVAL_FLAG\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_LEFT_APPROVAL_FLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAMH_LEFT_APPROVAL_ECODE {
                get {
                    try {
                        return ((decimal)(this[this.tableMainHead1.HAMH_LEFT_APPROVAL_ECODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_LEFT_APPROVAL_ECODE\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_LEFT_APPROVAL_ECODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_EORA_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_EORA_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_EORA_TYPE\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_EORA_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAMH_EORA_CODE {
                get {
                    try {
                        return ((decimal)(this[this.tableMainHead1.HAMH_EORA_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_EORA_CODE\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_EORA_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAMH_APPROVAL_NO {
                get {
                    try {
                        return ((decimal)(this[this.tableMainHead1.HAMH_APPROVAL_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_APPROVAL_NO\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_APPROVAL_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime HAMH_APPROVAL_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMainHead1.HAMH_APPROVAL_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_APPROVAL_DATE\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_APPROVAL_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_APPL_PENDING_REASON {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_APPL_PENDING_REASONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_APPL_PENDING_REASON\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_APPL_PENDING_REASONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_WORKING_STATUS {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_WORKING_STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_WORKING_STATUS\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_WORKING_STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_CREATED_BY {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_CREATED_BYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_CREATED_BY\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_CREATED_BYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime HAMH_CREATED_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMainHead1.HAMH_CREATED_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_CREATED_DATE\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_CREATED_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAMH_MODIFIED_BY {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAMH_MODIFIED_BYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_MODIFIED_BY\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_MODIFIED_BYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime HAMH_MODIFIED_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMainHead1.HAMH_MODIFIED_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAMH_MODIFIED_DATE\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAMH_MODIFIED_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAED_APPL_NUMBER {
                get {
                    try {
                        return ((decimal)(this[this.tableMainHead1.HAED_APPL_NUMBERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAED_APPL_NUMBER\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAED_APPL_NUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAED_SSC_NUMBER {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAED_SSC_NUMBERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAED_SSC_NUMBER\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAED_SSC_NUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAED_NAME {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAED_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAED_NAME\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAED_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime HAED_DATEOFBIRTH {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMainHead1.HAED_DATEOFBIRTHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAED_DATEOFBIRTH\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAED_DATEOFBIRTHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAED_FATHER_NAME {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.HAED_FATHER_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAED_FATHER_NAME\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.HAED_FATHER_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEPT_ID {
                get {
                    try {
                        return ((string)(this[this.tableMainHead1.DEPT_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEPT_ID\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.DEPT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DESG_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableMainHead1.DESG_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESG_ID\' in table \'MainHead1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead1.DESG_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_APPL_DATENull() {
                return this.IsNull(this.tableMainHead1.HAMH_APPL_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_APPL_DATENull() {
                this[this.tableMainHead1.HAMH_APPL_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_RECRUITMENT_SOURCE_CODENull() {
                return this.IsNull(this.tableMainHead1.HAMH_RECRUITMENT_SOURCE_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_RECRUITMENT_SOURCE_CODENull() {
                this[this.tableMainHead1.HAMH_RECRUITMENT_SOURCE_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_RECRUITMENT_SOURCE_DELT_CODENull() {
                return this.IsNull(this.tableMainHead1.HAMH_RECRUITMENT_SOURCE_DELT_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_RECRUITMENT_SOURCE_DELT_CODENull() {
                this[this.tableMainHead1.HAMH_RECRUITMENT_SOURCE_DELT_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_RECRUITMENT_SOURCE_ECODENull() {
                return this.IsNull(this.tableMainHead1.HAMH_RECRUITMENT_SOURCE_ECODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_RECRUITMENT_SOURCE_ECODENull() {
                this[this.tableMainHead1.HAMH_RECRUITMENT_SOURCE_ECODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_NAMENull() {
                return this.IsNull(this.tableMainHead1.HAMH_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_NAMENull() {
                this[this.tableMainHead1.HAMH_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_FORHNull() {
                return this.IsNull(this.tableMainHead1.HAMH_FORHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_FORHNull() {
                this[this.tableMainHead1.HAMH_FORHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_FORH_NAMENull() {
                return this.IsNull(this.tableMainHead1.HAMH_FORH_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_FORH_NAMENull() {
                this[this.tableMainHead1.HAMH_FORH_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_DOJNull() {
                return this.IsNull(this.tableMainHead1.HAMH_DOJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_DOJNull() {
                this[this.tableMainHead1.HAMH_DOJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_DOBNull() {
                return this.IsNull(this.tableMainHead1.HAMH_DOBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_DOBNull() {
                this[this.tableMainHead1.HAMH_DOBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_NATIVE_PLACENull() {
                return this.IsNull(this.tableMainHead1.HAMH_NATIVE_PLACEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_NATIVE_PLACENull() {
                this[this.tableMainHead1.HAMH_NATIVE_PLACEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_SEXNull() {
                return this.IsNull(this.tableMainHead1.HAMH_SEXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_SEXNull() {
                this[this.tableMainHead1.HAMH_SEXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_NAIONALITYNull() {
                return this.IsNull(this.tableMainHead1.HAMH_NAIONALITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_NAIONALITYNull() {
                this[this.tableMainHead1.HAMH_NAIONALITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_RELIGIONNull() {
                return this.IsNull(this.tableMainHead1.HAMH_RELIGIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_RELIGIONNull() {
                this[this.tableMainHead1.HAMH_RELIGIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_MATRITAL_STATUSNull() {
                return this.IsNull(this.tableMainHead1.HAMH_MATRITAL_STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_MATRITAL_STATUSNull() {
                this[this.tableMainHead1.HAMH_MATRITAL_STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_MARRIAGE_DATENull() {
                return this.IsNull(this.tableMainHead1.HAMH_MARRIAGE_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_MARRIAGE_DATENull() {
                this[this.tableMainHead1.HAMH_MARRIAGE_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_NOMINIEE_NAMENull() {
                return this.IsNull(this.tableMainHead1.HAMH_NOMINIEE_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_NOMINIEE_NAMENull() {
                this[this.tableMainHead1.HAMH_NOMINIEE_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_NOMINIEE_RELATIONNull() {
                return this.IsNull(this.tableMainHead1.HAMH_NOMINIEE_RELATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_NOMINIEE_RELATIONNull() {
                this[this.tableMainHead1.HAMH_NOMINIEE_RELATIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_PD_HEIGHTNull() {
                return this.IsNull(this.tableMainHead1.HAMH_PD_HEIGHTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_PD_HEIGHTNull() {
                this[this.tableMainHead1.HAMH_PD_HEIGHTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_PD_WEIGHTNull() {
                return this.IsNull(this.tableMainHead1.HAMH_PD_WEIGHTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_PD_WEIGHTNull() {
                this[this.tableMainHead1.HAMH_PD_WEIGHTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_PD_BLOOD_GROUP_CODENull() {
                return this.IsNull(this.tableMainHead1.HAMH_PD_BLOOD_GROUP_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_PD_BLOOD_GROUP_CODENull() {
                this[this.tableMainHead1.HAMH_PD_BLOOD_GROUP_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_PD_PHYSICAL_DISABILITYNull() {
                return this.IsNull(this.tableMainHead1.HAMH_PD_PHYSICAL_DISABILITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_PD_PHYSICAL_DISABILITYNull() {
                this[this.tableMainHead1.HAMH_PD_PHYSICAL_DISABILITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_PD_PROLONGED_ILLNESSNull() {
                return this.IsNull(this.tableMainHead1.HAMH_PD_PROLONGED_ILLNESSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_PD_PROLONGED_ILLNESSNull() {
                this[this.tableMainHead1.HAMH_PD_PROLONGED_ILLNESSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_PD_PROLONGED_ILLNESS_PERIODNull() {
                return this.IsNull(this.tableMainHead1.HAMH_PD_PROLONGED_ILLNESS_PERIODColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_PD_PROLONGED_ILLNESS_PERIODNull() {
                this[this.tableMainHead1.HAMH_PD_PROLONGED_ILLNESS_PERIODColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_ADD_PRES_ADDR_HNONull() {
                return this.IsNull(this.tableMainHead1.HAMH_ADD_PRES_ADDR_HNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_ADD_PRES_ADDR_HNONull() {
                this[this.tableMainHead1.HAMH_ADD_PRES_ADDR_HNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_ADD_PRES_ADDR_LANDMARKNull() {
                return this.IsNull(this.tableMainHead1.HAMH_ADD_PRES_ADDR_LANDMARKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_ADD_PRES_ADDR_LANDMARKNull() {
                this[this.tableMainHead1.HAMH_ADD_PRES_ADDR_LANDMARKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_ADD_PRES_ADDR_VILL_OR_TOWNNull() {
                return this.IsNull(this.tableMainHead1.HAMH_ADD_PRES_ADDR_VILL_OR_TOWNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_ADD_PRES_ADDR_VILL_OR_TOWNNull() {
                this[this.tableMainHead1.HAMH_ADD_PRES_ADDR_VILL_OR_TOWNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_ADD_PRES_ADDR_MANDALNull() {
                return this.IsNull(this.tableMainHead1.HAMH_ADD_PRES_ADDR_MANDALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_ADD_PRES_ADDR_MANDALNull() {
                this[this.tableMainHead1.HAMH_ADD_PRES_ADDR_MANDALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_ADD_PRES_ADDR_DISTRICTNull() {
                return this.IsNull(this.tableMainHead1.HAMH_ADD_PRES_ADDR_DISTRICTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_ADD_PRES_ADDR_DISTRICTNull() {
                this[this.tableMainHead1.HAMH_ADD_PRES_ADDR_DISTRICTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_ADD_PRES_ADDR_STATENull() {
                return this.IsNull(this.tableMainHead1.HAMH_ADD_PRES_ADDR_STATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_ADD_PRES_ADDR_STATENull() {
                this[this.tableMainHead1.HAMH_ADD_PRES_ADDR_STATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_ADD_PRES_ADDR_PINNull() {
                return this.IsNull(this.tableMainHead1.HAMH_ADD_PRES_ADDR_PINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_ADD_PRES_ADDR_PINNull() {
                this[this.tableMainHead1.HAMH_ADD_PRES_ADDR_PINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_ADD_PRES_ADDR_PHONENull() {
                return this.IsNull(this.tableMainHead1.HAMH_ADD_PRES_ADDR_PHONEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_ADD_PRES_ADDR_PHONENull() {
                this[this.tableMainHead1.HAMH_ADD_PRES_ADDR_PHONEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_ADD_PERM_ADDR_HNONull() {
                return this.IsNull(this.tableMainHead1.HAMH_ADD_PERM_ADDR_HNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_ADD_PERM_ADDR_HNONull() {
                this[this.tableMainHead1.HAMH_ADD_PERM_ADDR_HNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_ADD_PERM_ADDR_LANDMARKNull() {
                return this.IsNull(this.tableMainHead1.HAMH_ADD_PERM_ADDR_LANDMARKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_ADD_PERM_ADDR_LANDMARKNull() {
                this[this.tableMainHead1.HAMH_ADD_PERM_ADDR_LANDMARKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_ADD_PERM_ADDR_VILL_OR_TOWNNull() {
                return this.IsNull(this.tableMainHead1.HAMH_ADD_PERM_ADDR_VILL_OR_TOWNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_ADD_PERM_ADDR_VILL_OR_TOWNNull() {
                this[this.tableMainHead1.HAMH_ADD_PERM_ADDR_VILL_OR_TOWNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_ADD_PERM_ADDR_MANDALNull() {
                return this.IsNull(this.tableMainHead1.HAMH_ADD_PERM_ADDR_MANDALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_ADD_PERM_ADDR_MANDALNull() {
                this[this.tableMainHead1.HAMH_ADD_PERM_ADDR_MANDALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_ADD_PERM_ADDR_DISTRICTNull() {
                return this.IsNull(this.tableMainHead1.HAMH_ADD_PERM_ADDR_DISTRICTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_ADD_PERM_ADDR_DISTRICTNull() {
                this[this.tableMainHead1.HAMH_ADD_PERM_ADDR_DISTRICTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_ADD_PERM_ADDR_STATENull() {
                return this.IsNull(this.tableMainHead1.HAMH_ADD_PERM_ADDR_STATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_ADD_PERM_ADDR_STATENull() {
                this[this.tableMainHead1.HAMH_ADD_PERM_ADDR_STATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_ADD_PERM_ADDR_PINNull() {
                return this.IsNull(this.tableMainHead1.HAMH_ADD_PERM_ADDR_PINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_ADD_PERM_ADDR_PINNull() {
                this[this.tableMainHead1.HAMH_ADD_PERM_ADDR_PINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_ADD_PERM_ADDR_PHONENull() {
                return this.IsNull(this.tableMainHead1.HAMH_ADD_PERM_ADDR_PHONEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_ADD_PERM_ADDR_PHONENull() {
                this[this.tableMainHead1.HAMH_ADD_PERM_ADDR_PHONEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_ADD_CONTPERS_NAMENull() {
                return this.IsNull(this.tableMainHead1.HAMH_ADD_CONTPERS_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_ADD_CONTPERS_NAMENull() {
                this[this.tableMainHead1.HAMH_ADD_CONTPERS_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_ADD_CONTPERS_ADDR_HNONull() {
                return this.IsNull(this.tableMainHead1.HAMH_ADD_CONTPERS_ADDR_HNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_ADD_CONTPERS_ADDR_HNONull() {
                this[this.tableMainHead1.HAMH_ADD_CONTPERS_ADDR_HNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_ADD_CONTPERS_ADDR_LANDMARKNull() {
                return this.IsNull(this.tableMainHead1.HAMH_ADD_CONTPERS_ADDR_LANDMARKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_ADD_CONTPERS_ADDR_LANDMARKNull() {
                this[this.tableMainHead1.HAMH_ADD_CONTPERS_ADDR_LANDMARKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_ADD_CONTPERS_ADDR_VILL_OR_TOWNNull() {
                return this.IsNull(this.tableMainHead1.HAMH_ADD_CONTPERS_ADDR_VILL_OR_TOWNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_ADD_CONTPERS_ADDR_VILL_OR_TOWNNull() {
                this[this.tableMainHead1.HAMH_ADD_CONTPERS_ADDR_VILL_OR_TOWNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_ADD_CONTPERS_ADDR_MANDALNull() {
                return this.IsNull(this.tableMainHead1.HAMH_ADD_CONTPERS_ADDR_MANDALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_ADD_CONTPERS_ADDR_MANDALNull() {
                this[this.tableMainHead1.HAMH_ADD_CONTPERS_ADDR_MANDALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_ADD_CONTPERS_ADDR_DISTRICTNull() {
                return this.IsNull(this.tableMainHead1.HAMH_ADD_CONTPERS_ADDR_DISTRICTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_ADD_CONTPERS_ADDR_DISTRICTNull() {
                this[this.tableMainHead1.HAMH_ADD_CONTPERS_ADDR_DISTRICTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_ADD_CONTPERS_ADDR_STATENull() {
                return this.IsNull(this.tableMainHead1.HAMH_ADD_CONTPERS_ADDR_STATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_ADD_CONTPERS_ADDR_STATENull() {
                this[this.tableMainHead1.HAMH_ADD_CONTPERS_ADDR_STATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_ADD_CONTPERS_ADDR_PINNull() {
                return this.IsNull(this.tableMainHead1.HAMH_ADD_CONTPERS_ADDR_PINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_ADD_CONTPERS_ADDR_PINNull() {
                this[this.tableMainHead1.HAMH_ADD_CONTPERS_ADDR_PINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_ADD_CONTPERS_ADDR_PHONE_RESNull() {
                return this.IsNull(this.tableMainHead1.HAMH_ADD_CONTPERS_ADDR_PHONE_RESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_ADD_CONTPERS_ADDR_PHONE_RESNull() {
                this[this.tableMainHead1.HAMH_ADD_CONTPERS_ADDR_PHONE_RESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_ADD_CONTPERS_ADDR_PHONE_OFFNull() {
                return this.IsNull(this.tableMainHead1.HAMH_ADD_CONTPERS_ADDR_PHONE_OFFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_ADD_CONTPERS_ADDR_PHONE_OFFNull() {
                this[this.tableMainHead1.HAMH_ADD_CONTPERS_ADDR_PHONE_OFFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_VD_OWN_VEHICLE_FLAGNull() {
                return this.IsNull(this.tableMainHead1.HAMH_VD_OWN_VEHICLE_FLAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_VD_OWN_VEHICLE_FLAGNull() {
                this[this.tableMainHead1.HAMH_VD_OWN_VEHICLE_FLAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_VD_VEHICLE_REG_NUMBERNull() {
                return this.IsNull(this.tableMainHead1.HAMH_VD_VEHICLE_REG_NUMBERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_VD_VEHICLE_REG_NUMBERNull() {
                this[this.tableMainHead1.HAMH_VD_VEHICLE_REG_NUMBERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_VD_VEHICLE_MAKENull() {
                return this.IsNull(this.tableMainHead1.HAMH_VD_VEHICLE_MAKEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_VD_VEHICLE_MAKENull() {
                this[this.tableMainHead1.HAMH_VD_VEHICLE_MAKEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_VD_DL_NUMBERNull() {
                return this.IsNull(this.tableMainHead1.HAMH_VD_DL_NUMBERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_VD_DL_NUMBERNull() {
                this[this.tableMainHead1.HAMH_VD_DL_NUMBERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_VD_PASSPORT_NUMBERNull() {
                return this.IsNull(this.tableMainHead1.HAMH_VD_PASSPORT_NUMBERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_VD_PASSPORT_NUMBERNull() {
                this[this.tableMainHead1.HAMH_VD_PASSPORT_NUMBERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_VD_PAN_CARD_NUMBERNull() {
                return this.IsNull(this.tableMainHead1.HAMH_VD_PAN_CARD_NUMBERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_VD_PAN_CARD_NUMBERNull() {
                this[this.tableMainHead1.HAMH_VD_PAN_CARD_NUMBERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_MY_PHOTONull() {
                return this.IsNull(this.tableMainHead1.HAMH_MY_PHOTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_MY_PHOTONull() {
                this[this.tableMainHead1.HAMH_MY_PHOTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_INTERVIEW_DONE_BY_ECODENull() {
                return this.IsNull(this.tableMainHead1.HAMH_INTERVIEW_DONE_BY_ECODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_INTERVIEW_DONE_BY_ECODENull() {
                this[this.tableMainHead1.HAMH_INTERVIEW_DONE_BY_ECODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_INTERVIEW_REMARKSNull() {
                return this.IsNull(this.tableMainHead1.HAMH_INTERVIEW_REMARKSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_INTERVIEW_REMARKSNull() {
                this[this.tableMainHead1.HAMH_INTERVIEW_REMARKSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_INTERVIEW_DATENull() {
                return this.IsNull(this.tableMainHead1.HAMH_INTERVIEW_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_INTERVIEW_DATENull() {
                this[this.tableMainHead1.HAMH_INTERVIEW_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_LEFT_DATENull() {
                return this.IsNull(this.tableMainHead1.HAMH_LEFT_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_LEFT_DATENull() {
                this[this.tableMainHead1.HAMH_LEFT_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_LEFT_REASONNull() {
                return this.IsNull(this.tableMainHead1.HAMH_LEFT_REASONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_LEFT_REASONNull() {
                this[this.tableMainHead1.HAMH_LEFT_REASONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_LEFT_APPROVAL_FLAGNull() {
                return this.IsNull(this.tableMainHead1.HAMH_LEFT_APPROVAL_FLAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_LEFT_APPROVAL_FLAGNull() {
                this[this.tableMainHead1.HAMH_LEFT_APPROVAL_FLAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_LEFT_APPROVAL_ECODENull() {
                return this.IsNull(this.tableMainHead1.HAMH_LEFT_APPROVAL_ECODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_LEFT_APPROVAL_ECODENull() {
                this[this.tableMainHead1.HAMH_LEFT_APPROVAL_ECODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_EORA_TYPENull() {
                return this.IsNull(this.tableMainHead1.HAMH_EORA_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_EORA_TYPENull() {
                this[this.tableMainHead1.HAMH_EORA_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_EORA_CODENull() {
                return this.IsNull(this.tableMainHead1.HAMH_EORA_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_EORA_CODENull() {
                this[this.tableMainHead1.HAMH_EORA_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_APPROVAL_NONull() {
                return this.IsNull(this.tableMainHead1.HAMH_APPROVAL_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_APPROVAL_NONull() {
                this[this.tableMainHead1.HAMH_APPROVAL_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_APPROVAL_DATENull() {
                return this.IsNull(this.tableMainHead1.HAMH_APPROVAL_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_APPROVAL_DATENull() {
                this[this.tableMainHead1.HAMH_APPROVAL_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_APPL_PENDING_REASONNull() {
                return this.IsNull(this.tableMainHead1.HAMH_APPL_PENDING_REASONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_APPL_PENDING_REASONNull() {
                this[this.tableMainHead1.HAMH_APPL_PENDING_REASONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_WORKING_STATUSNull() {
                return this.IsNull(this.tableMainHead1.HAMH_WORKING_STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_WORKING_STATUSNull() {
                this[this.tableMainHead1.HAMH_WORKING_STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_CREATED_BYNull() {
                return this.IsNull(this.tableMainHead1.HAMH_CREATED_BYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_CREATED_BYNull() {
                this[this.tableMainHead1.HAMH_CREATED_BYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_CREATED_DATENull() {
                return this.IsNull(this.tableMainHead1.HAMH_CREATED_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_CREATED_DATENull() {
                this[this.tableMainHead1.HAMH_CREATED_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_MODIFIED_BYNull() {
                return this.IsNull(this.tableMainHead1.HAMH_MODIFIED_BYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_MODIFIED_BYNull() {
                this[this.tableMainHead1.HAMH_MODIFIED_BYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAMH_MODIFIED_DATENull() {
                return this.IsNull(this.tableMainHead1.HAMH_MODIFIED_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAMH_MODIFIED_DATENull() {
                this[this.tableMainHead1.HAMH_MODIFIED_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAED_APPL_NUMBERNull() {
                return this.IsNull(this.tableMainHead1.HAED_APPL_NUMBERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAED_APPL_NUMBERNull() {
                this[this.tableMainHead1.HAED_APPL_NUMBERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAED_SSC_NUMBERNull() {
                return this.IsNull(this.tableMainHead1.HAED_SSC_NUMBERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAED_SSC_NUMBERNull() {
                this[this.tableMainHead1.HAED_SSC_NUMBERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAED_NAMENull() {
                return this.IsNull(this.tableMainHead1.HAED_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAED_NAMENull() {
                this[this.tableMainHead1.HAED_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAED_DATEOFBIRTHNull() {
                return this.IsNull(this.tableMainHead1.HAED_DATEOFBIRTHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAED_DATEOFBIRTHNull() {
                this[this.tableMainHead1.HAED_DATEOFBIRTHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAED_FATHER_NAMENull() {
                return this.IsNull(this.tableMainHead1.HAED_FATHER_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAED_FATHER_NAMENull() {
                this[this.tableMainHead1.HAED_FATHER_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEPT_IDNull() {
                return this.IsNull(this.tableMainHead1.DEPT_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEPT_IDNull() {
                this[this.tableMainHead1.DEPT_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESG_IDNull() {
                return this.IsNull(this.tableMainHead1.DESG_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESG_IDNull() {
                this[this.tableMainHead1.DESG_IDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EducationRow : global::System.Data.DataRow {
            
            private EducationDataTable tableEducation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EducationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEducation = ((EducationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SLNO_edu {
                get {
                    try {
                        return ((decimal)(this[this.tableEducation.SLNO_eduColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SLNO_edu\' in table \'Education\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEducation.SLNO_eduColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExamPass {
                get {
                    try {
                        return ((string)(this[this.tableEducation.ExamPassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamPass\' in table \'Education\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEducation.ExamPassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExamType {
                get {
                    try {
                        return ((string)(this[this.tableEducation.ExamTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamType\' in table \'Education\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEducation.ExamTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal YearPass {
                get {
                    try {
                        return ((decimal)(this[this.tableEducation.YearPassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YearPass\' in table \'Education\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEducation.YearPassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InstName {
                get {
                    try {
                        return ((string)(this[this.tableEducation.InstNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstName\' in table \'Education\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEducation.InstNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InstLocation {
                get {
                    try {
                        return ((string)(this[this.tableEducation.InstLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstLocation\' in table \'Education\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEducation.InstLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Subject {
                get {
                    try {
                        return ((string)(this[this.tableEducation.SubjectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Subject\' in table \'Education\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEducation.SubjectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string University {
                get {
                    try {
                        return ((string)(this[this.tableEducation.UniversityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'University\' in table \'Education\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEducation.UniversityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PerofPass {
                get {
                    try {
                        return ((decimal)(this[this.tableEducation.PerofPassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PerofPass\' in table \'Education\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEducation.PerofPassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSLNO_eduNull() {
                return this.IsNull(this.tableEducation.SLNO_eduColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSLNO_eduNull() {
                this[this.tableEducation.SLNO_eduColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamPassNull() {
                return this.IsNull(this.tableEducation.ExamPassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamPassNull() {
                this[this.tableEducation.ExamPassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamTypeNull() {
                return this.IsNull(this.tableEducation.ExamTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamTypeNull() {
                this[this.tableEducation.ExamTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYearPassNull() {
                return this.IsNull(this.tableEducation.YearPassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYearPassNull() {
                this[this.tableEducation.YearPassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInstNameNull() {
                return this.IsNull(this.tableEducation.InstNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInstNameNull() {
                this[this.tableEducation.InstNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInstLocationNull() {
                return this.IsNull(this.tableEducation.InstLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInstLocationNull() {
                this[this.tableEducation.InstLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubjectNull() {
                return this.IsNull(this.tableEducation.SubjectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubjectNull() {
                this[this.tableEducation.SubjectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUniversityNull() {
                return this.IsNull(this.tableEducation.UniversityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUniversityNull() {
                this[this.tableEducation.UniversityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPerofPassNull() {
                return this.IsNull(this.tableEducation.PerofPassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPerofPassNull() {
                this[this.tableEducation.PerofPassColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ShortCourseRow : global::System.Data.DataRow {
            
            private ShortCourseDataTable tableShortCourse;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ShortCourseRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableShortCourse = ((ShortCourseDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SLNO_sc {
                get {
                    try {
                        return ((decimal)(this[this.tableShortCourse.SLNO_scColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SLNO_sc\' in table \'ShortCourse\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShortCourse.SLNO_scColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CourseName {
                get {
                    try {
                        return ((string)(this[this.tableShortCourse.CourseNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CourseName\' in table \'ShortCourse\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShortCourse.CourseNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal YearofPass {
                get {
                    try {
                        return ((decimal)(this[this.tableShortCourse.YearofPassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YearofPass\' in table \'ShortCourse\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShortCourse.YearofPassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Insti_name {
                get {
                    try {
                        return ((string)(this[this.tableShortCourse.Insti_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Insti_name\' in table \'ShortCourse\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShortCourse.Insti_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Insti_Location {
                get {
                    try {
                        return ((string)(this[this.tableShortCourse.Insti_LocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Insti_Location\' in table \'ShortCourse\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShortCourse.Insti_LocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Subject {
                get {
                    try {
                        return ((string)(this[this.tableShortCourse.SubjectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Subject\' in table \'ShortCourse\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShortCourse.SubjectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Duration {
                get {
                    try {
                        return ((string)(this[this.tableShortCourse.DurationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Duration\' in table \'ShortCourse\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShortCourse.DurationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PerofMarks {
                get {
                    try {
                        return ((decimal)(this[this.tableShortCourse.PerofMarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PerofMarks\' in table \'ShortCourse\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShortCourse.PerofMarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSLNO_scNull() {
                return this.IsNull(this.tableShortCourse.SLNO_scColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSLNO_scNull() {
                this[this.tableShortCourse.SLNO_scColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCourseNameNull() {
                return this.IsNull(this.tableShortCourse.CourseNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCourseNameNull() {
                this[this.tableShortCourse.CourseNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYearofPassNull() {
                return this.IsNull(this.tableShortCourse.YearofPassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYearofPassNull() {
                this[this.tableShortCourse.YearofPassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsti_nameNull() {
                return this.IsNull(this.tableShortCourse.Insti_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsti_nameNull() {
                this[this.tableShortCourse.Insti_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsti_LocationNull() {
                return this.IsNull(this.tableShortCourse.Insti_LocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsti_LocationNull() {
                this[this.tableShortCourse.Insti_LocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubjectNull() {
                return this.IsNull(this.tableShortCourse.SubjectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubjectNull() {
                this[this.tableShortCourse.SubjectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDurationNull() {
                return this.IsNull(this.tableShortCourse.DurationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDurationNull() {
                this[this.tableShortCourse.DurationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPerofMarksNull() {
                return this.IsNull(this.tableShortCourse.PerofMarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPerofMarksNull() {
                this[this.tableShortCourse.PerofMarksColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CurricularRow : global::System.Data.DataRow {
            
            private CurricularDataTable tableCurricular;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CurricularRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCurricular = ((CurricularDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SLNO_eca {
                get {
                    try {
                        return ((decimal)(this[this.tableCurricular.SLNO_ecaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SLNO_eca\' in table \'Curricular\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCurricular.SLNO_ecaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TypeofECA {
                get {
                    try {
                        return ((string)(this[this.tableCurricular.TypeofECAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TypeofECA\' in table \'Curricular\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCurricular.TypeofECAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableCurricular.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'Curricular\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCurricular.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSLNO_ecaNull() {
                return this.IsNull(this.tableCurricular.SLNO_ecaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSLNO_ecaNull() {
                this[this.tableCurricular.SLNO_ecaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeofECANull() {
                return this.IsNull(this.tableCurricular.TypeofECAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeofECANull() {
                this[this.tableCurricular.TypeofECAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tableCurricular.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tableCurricular.RemarksColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FamilyRow : global::System.Data.DataRow {
            
            private FamilyDataTable tableFamily;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FamilyRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFamily = ((FamilyDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SLNO {
                get {
                    try {
                        return ((decimal)(this[this.tableFamily.SLNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SLNO\' in table \'Family\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFamily.SLNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RelationShip {
                get {
                    try {
                        return ((string)(this[this.tableFamily.RelationShipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RelationShip\' in table \'Family\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFamily.RelationShipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sName {
                get {
                    try {
                        return ((string)(this[this.tableFamily.sNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sName\' in table \'Family\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFamily.sNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateofBirth {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFamily.DateofBirthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateofBirth\' in table \'Family\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFamily.DateofBirthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Residing {
                get {
                    try {
                        return ((string)(this[this.tableFamily.ResidingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Residing\' in table \'Family\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFamily.ResidingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Depending {
                get {
                    try {
                        return ((string)(this[this.tableFamily.DependingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Depending\' in table \'Family\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFamily.DependingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Occupation {
                get {
                    try {
                        return ((string)(this[this.tableFamily.OccupationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Occupation\' in table \'Family\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFamily.OccupationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSLNONull() {
                return this.IsNull(this.tableFamily.SLNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSLNONull() {
                this[this.tableFamily.SLNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRelationShipNull() {
                return this.IsNull(this.tableFamily.RelationShipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRelationShipNull() {
                this[this.tableFamily.RelationShipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssNameNull() {
                return this.IsNull(this.tableFamily.sNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsNameNull() {
                this[this.tableFamily.sNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateofBirthNull() {
                return this.IsNull(this.tableFamily.DateofBirthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateofBirthNull() {
                this[this.tableFamily.DateofBirthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResidingNull() {
                return this.IsNull(this.tableFamily.ResidingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResidingNull() {
                this[this.tableFamily.ResidingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDependingNull() {
                return this.IsNull(this.tableFamily.DependingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDependingNull() {
                this[this.tableFamily.DependingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOccupationNull() {
                return this.IsNull(this.tableFamily.OccupationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOccupationNull() {
                this[this.tableFamily.OccupationColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ReferenceRow : global::System.Data.DataRow {
            
            private ReferenceDataTable tableReference;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ReferenceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableReference = ((ReferenceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SlNo_ref {
                get {
                    try {
                        return ((decimal)(this[this.tableReference.SlNo_refColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SlNo_ref\' in table \'Reference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReference.SlNo_refColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refName {
                get {
                    try {
                        return ((string)(this[this.tableReference.refNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refName\' in table \'Reference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReference.refNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refOccup {
                get {
                    try {
                        return ((string)(this[this.tableReference.refOccupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refOccup\' in table \'Reference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReference.refOccupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string refPhoneNo {
                get {
                    try {
                        return ((string)(this[this.tableReference.refPhoneNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refPhoneNo\' in table \'Reference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReference.refPhoneNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HouseNo {
                get {
                    try {
                        return ((string)(this[this.tableReference.HouseNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HouseNo\' in table \'Reference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReference.HouseNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LandMark {
                get {
                    try {
                        return ((string)(this[this.tableReference.LandMarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandMark\' in table \'Reference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReference.LandMarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Village {
                get {
                    try {
                        return ((string)(this[this.tableReference.VillageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Village\' in table \'Reference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReference.VillageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mondal {
                get {
                    try {
                        return ((string)(this[this.tableReference.MondalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mondal\' in table \'Reference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReference.MondalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string District {
                get {
                    try {
                        return ((string)(this[this.tableReference.DistrictColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'District\' in table \'Reference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReference.DistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tableReference.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'State\' in table \'Reference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReference.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Pin {
                get {
                    try {
                        return ((decimal)(this[this.tableReference.PinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pin\' in table \'Reference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReference.PinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PhoneNoref {
                get {
                    try {
                        return ((string)(this[this.tableReference.PhoneNorefColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhoneNoref\' in table \'Reference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReference.PhoneNorefColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlNo_refNull() {
                return this.IsNull(this.tableReference.SlNo_refColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlNo_refNull() {
                this[this.tableReference.SlNo_refColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefNameNull() {
                return this.IsNull(this.tableReference.refNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefNameNull() {
                this[this.tableReference.refNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefOccupNull() {
                return this.IsNull(this.tableReference.refOccupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefOccupNull() {
                this[this.tableReference.refOccupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrefPhoneNoNull() {
                return this.IsNull(this.tableReference.refPhoneNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrefPhoneNoNull() {
                this[this.tableReference.refPhoneNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHouseNoNull() {
                return this.IsNull(this.tableReference.HouseNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHouseNoNull() {
                this[this.tableReference.HouseNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLandMarkNull() {
                return this.IsNull(this.tableReference.LandMarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLandMarkNull() {
                this[this.tableReference.LandMarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVillageNull() {
                return this.IsNull(this.tableReference.VillageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVillageNull() {
                this[this.tableReference.VillageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMondalNull() {
                return this.IsNull(this.tableReference.MondalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMondalNull() {
                this[this.tableReference.MondalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictNull() {
                return this.IsNull(this.tableReference.DistrictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictNull() {
                this[this.tableReference.DistrictColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNull() {
                return this.IsNull(this.tableReference.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNull() {
                this[this.tableReference.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPinNull() {
                return this.IsNull(this.tableReference.PinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPinNull() {
                this[this.tableReference.PinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhoneNorefNull() {
                return this.IsNull(this.tableReference.PhoneNorefColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhoneNorefNull() {
                this[this.tableReference.PhoneNorefColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ExperienceRow : global::System.Data.DataRow {
            
            private ExperienceDataTable tableExperience;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ExperienceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableExperience = ((ExperienceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SlNo_ex {
                get {
                    try {
                        return ((decimal)(this[this.tableExperience.SlNo_exColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SlNo_ex\' in table \'Experience\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExperience.SlNo_exColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Organisation {
                get {
                    try {
                        return ((string)(this[this.tableExperience.OrganisationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Organisation\' in table \'Experience\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExperience.OrganisationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FromDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableExperience.FromDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FromDate\' in table \'Experience\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExperience.FromDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ToDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableExperience.ToDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToDate\' in table \'Experience\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExperience.ToDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HouseNo {
                get {
                    try {
                        return ((string)(this[this.tableExperience.HouseNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HouseNo\' in table \'Experience\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExperience.HouseNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LandMark {
                get {
                    try {
                        return ((string)(this[this.tableExperience.LandMarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandMark\' in table \'Experience\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExperience.LandMarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VillageEx {
                get {
                    try {
                        return ((string)(this[this.tableExperience.VillageExColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VillageEx\' in table \'Experience\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExperience.VillageExColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mondal {
                get {
                    try {
                        return ((string)(this[this.tableExperience.MondalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mondal\' in table \'Experience\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExperience.MondalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string District {
                get {
                    try {
                        return ((string)(this[this.tableExperience.DistrictColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'District\' in table \'Experience\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExperience.DistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tableExperience.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'State\' in table \'Experience\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExperience.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Pin {
                get {
                    try {
                        return ((decimal)(this[this.tableExperience.PinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pin\' in table \'Experience\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExperience.PinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JoiningDesg {
                get {
                    try {
                        return ((string)(this[this.tableExperience.JoiningDesgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JoiningDesg\' in table \'Experience\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExperience.JoiningDesgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LeavingDesg {
                get {
                    try {
                        return ((string)(this[this.tableExperience.LeavingDesgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LeavingDesg\' in table \'Experience\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExperience.LeavingDesgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Salary {
                get {
                    try {
                        return ((decimal)(this[this.tableExperience.SalaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Salary\' in table \'Experience\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExperience.SalaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks_ex {
                get {
                    try {
                        return ((string)(this[this.tableExperience.Remarks_exColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks_ex\' in table \'Experience\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExperience.Remarks_exColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Reasons {
                get {
                    try {
                        return ((string)(this[this.tableExperience.ReasonsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Reasons\' in table \'Experience\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableExperience.ReasonsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlNo_exNull() {
                return this.IsNull(this.tableExperience.SlNo_exColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlNo_exNull() {
                this[this.tableExperience.SlNo_exColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrganisationNull() {
                return this.IsNull(this.tableExperience.OrganisationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrganisationNull() {
                this[this.tableExperience.OrganisationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFromDateNull() {
                return this.IsNull(this.tableExperience.FromDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFromDateNull() {
                this[this.tableExperience.FromDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToDateNull() {
                return this.IsNull(this.tableExperience.ToDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToDateNull() {
                this[this.tableExperience.ToDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHouseNoNull() {
                return this.IsNull(this.tableExperience.HouseNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHouseNoNull() {
                this[this.tableExperience.HouseNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLandMarkNull() {
                return this.IsNull(this.tableExperience.LandMarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLandMarkNull() {
                this[this.tableExperience.LandMarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVillageExNull() {
                return this.IsNull(this.tableExperience.VillageExColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVillageExNull() {
                this[this.tableExperience.VillageExColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMondalNull() {
                return this.IsNull(this.tableExperience.MondalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMondalNull() {
                this[this.tableExperience.MondalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictNull() {
                return this.IsNull(this.tableExperience.DistrictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictNull() {
                this[this.tableExperience.DistrictColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNull() {
                return this.IsNull(this.tableExperience.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNull() {
                this[this.tableExperience.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPinNull() {
                return this.IsNull(this.tableExperience.PinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPinNull() {
                this[this.tableExperience.PinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJoiningDesgNull() {
                return this.IsNull(this.tableExperience.JoiningDesgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJoiningDesgNull() {
                this[this.tableExperience.JoiningDesgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLeavingDesgNull() {
                return this.IsNull(this.tableExperience.LeavingDesgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLeavingDesgNull() {
                this[this.tableExperience.LeavingDesgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalaryNull() {
                return this.IsNull(this.tableExperience.SalaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalaryNull() {
                this[this.tableExperience.SalaryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarks_exNull() {
                return this.IsNull(this.tableExperience.Remarks_exColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarks_exNull() {
                this[this.tableExperience.Remarks_exColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReasonsNull() {
                return this.IsNull(this.tableExperience.ReasonsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReasonsNull() {
                this[this.tableExperience.ReasonsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DocumentsRow : global::System.Data.DataRow {
            
            private DocumentsDataTable tableDocuments;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DocumentsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDocuments = ((DocumentsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SlNo_Doc {
                get {
                    try {
                        return ((decimal)(this[this.tableDocuments.SlNo_DocColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SlNo_Doc\' in table \'Documents\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocuments.SlNo_DocColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Head {
                get {
                    try {
                        return ((string)(this[this.tableDocuments.HeadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Head\' in table \'Documents\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocuments.HeadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Flag {
                get {
                    try {
                        return ((string)(this[this.tableDocuments.FlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Flag\' in table \'Documents\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocuments.FlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDocuments.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'Documents\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocuments.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks_Doc {
                get {
                    try {
                        return ((string)(this[this.tableDocuments.Remarks_DocColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks_Doc\' in table \'Documents\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocuments.Remarks_DocColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlNo_DocNull() {
                return this.IsNull(this.tableDocuments.SlNo_DocColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlNo_DocNull() {
                this[this.tableDocuments.SlNo_DocColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeadNull() {
                return this.IsNull(this.tableDocuments.HeadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeadNull() {
                this[this.tableDocuments.HeadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFlagNull() {
                return this.IsNull(this.tableDocuments.FlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFlagNull() {
                this[this.tableDocuments.FlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateNull() {
                return this.IsNull(this.tableDocuments.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateNull() {
                this[this.tableDocuments.DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarks_DocNull() {
                return this.IsNull(this.tableDocuments.Remarks_DocColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarks_DocNull() {
                this[this.tableDocuments.Remarks_DocColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class InductionRow : global::System.Data.DataRow {
            
            private InductionDataTable tableInduction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal InductionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInduction = ((InductionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAIT_EORA_CODE {
                get {
                    try {
                        return ((decimal)(this[this.tableInduction.HAIT_EORA_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAIT_EORA_CODE\' in table \'Induction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInduction.HAIT_EORA_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAIT_TRAINING_STATUS {
                get {
                    try {
                        return ((string)(this[this.tableInduction.HAIT_TRAINING_STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAIT_TRAINING_STATUS\' in table \'Induction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInduction.HAIT_TRAINING_STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAIT_TRAINER_ECODE {
                get {
                    try {
                        return ((decimal)(this[this.tableInduction.HAIT_TRAINER_ECODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAIT_TRAINER_ECODE\' in table \'Induction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInduction.HAIT_TRAINER_ECODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime HAIT_TRAINING_FROM {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInduction.HAIT_TRAINING_FROMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAIT_TRAINING_FROM\' in table \'Induction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInduction.HAIT_TRAINING_FROMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime HAIT_TRAINING_TO {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInduction.HAIT_TRAINING_TOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAIT_TRAINING_TO\' in table \'Induction\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInduction.HAIT_TRAINING_TOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAIT_EORA_CODENull() {
                return this.IsNull(this.tableInduction.HAIT_EORA_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAIT_EORA_CODENull() {
                this[this.tableInduction.HAIT_EORA_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAIT_TRAINING_STATUSNull() {
                return this.IsNull(this.tableInduction.HAIT_TRAINING_STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAIT_TRAINING_STATUSNull() {
                this[this.tableInduction.HAIT_TRAINING_STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAIT_TRAINER_ECODENull() {
                return this.IsNull(this.tableInduction.HAIT_TRAINER_ECODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAIT_TRAINER_ECODENull() {
                this[this.tableInduction.HAIT_TRAINER_ECODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAIT_TRAINING_FROMNull() {
                return this.IsNull(this.tableInduction.HAIT_TRAINING_FROMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAIT_TRAINING_FROMNull() {
                this[this.tableInduction.HAIT_TRAINING_FROMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAIT_TRAINING_TONull() {
                return this.IsNull(this.tableInduction.HAIT_TRAINING_TOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAIT_TRAINING_TONull() {
                this[this.tableInduction.HAIT_TRAINING_TOColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EORARow : global::System.Data.DataRow {
            
            private EORADataTable tableEORA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EORARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEORA = ((EORADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BRANCH_CODE {
                get {
                    try {
                        return ((string)(this[this.tableEORA.BRANCH_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BRANCH_CODE\' in table \'EORA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEORA.BRANCH_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEPT_ID {
                get {
                    try {
                        return ((string)(this[this.tableEORA.DEPT_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEPT_ID\' in table \'EORA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEORA.DEPT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PFNO {
                get {
                    try {
                        return ((string)(this[this.tableEORA.PFNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PFNO\' in table \'EORA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEORA.PFNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ECODE {
                get {
                    try {
                        return ((decimal)(this[this.tableEORA.ECODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ECODE\' in table \'EORA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEORA.ECODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MEMBER_NAME {
                get {
                    try {
                        return ((string)(this[this.tableEORA.MEMBER_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEMBER_NAME\' in table \'EORA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEORA.MEMBER_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EORA {
                get {
                    try {
                        return ((string)(this[this.tableEORA.EORAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EORA\' in table \'EORA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEORA.EORAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HRIS_EMP_NAME {
                get {
                    try {
                        return ((string)(this[this.tableEORA.HRIS_EMP_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HRIS_EMP_NAME\' in table \'EORA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEORA.HRIS_EMP_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EPFWAGE {
                get {
                    try {
                        return ((decimal)(this[this.tableEORA.EPFWAGEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EPFWAGE\' in table \'EORA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEORA.EPFWAGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DESG_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableEORA.DESG_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESG_ID\' in table \'EORA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEORA.DESG_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESIG {
                get {
                    try {
                        return ((string)(this[this.tableEORA.DESIGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESIG\' in table \'EORA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEORA.DESIGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EMP_DOJ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEORA.EMP_DOJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMP_DOJ\' in table \'EORA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEORA.EMP_DOJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EMP_DOB {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEORA.EMP_DOBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMP_DOB\' in table \'EORA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEORA.EMP_DOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FATHER_NAME {
                get {
                    try {
                        return ((string)(this[this.tableEORA.FATHER_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FATHER_NAME\' in table \'EORA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEORA.FATHER_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal elevel_id {
                get {
                    try {
                        return ((decimal)(this[this.tableEORA.elevel_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'elevel_id\' in table \'EORA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEORA.elevel_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company_code {
                get {
                    try {
                        return ((string)(this[this.tableEORA.company_codeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'company_code\' in table \'EORA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEORA.company_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string edu_qualification {
                get {
                    try {
                        return ((string)(this[this.tableEORA.edu_qualificationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'edu_qualification\' in table \'EORA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEORA.edu_qualificationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HRIS_DESIG {
                get {
                    try {
                        return ((string)(this[this.tableEORA.HRIS_DESIGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HRIS_DESIG\' in table \'EORA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEORA.HRIS_DESIGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BRANCH_NAME {
                get {
                    try {
                        return ((string)(this[this.tableEORA.BRANCH_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BRANCH_NAME\' in table \'EORA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEORA.BRANCH_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CM_COMPANY_NAME {
                get {
                    try {
                        return ((string)(this[this.tableEORA.CM_COMPANY_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CM_COMPANY_NAME\' in table \'EORA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEORA.CM_COMPANY_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESIG_NAME {
                get {
                    try {
                        return ((string)(this[this.tableEORA.DESIG_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESIG_NAME\' in table \'EORA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEORA.DESIG_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEPT_NAME {
                get {
                    try {
                        return ((string)(this[this.tableEORA.DEPT_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEPT_NAME\' in table \'EORA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEORA.DEPT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBRANCH_CODENull() {
                return this.IsNull(this.tableEORA.BRANCH_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBRANCH_CODENull() {
                this[this.tableEORA.BRANCH_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEPT_IDNull() {
                return this.IsNull(this.tableEORA.DEPT_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEPT_IDNull() {
                this[this.tableEORA.DEPT_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPFNONull() {
                return this.IsNull(this.tableEORA.PFNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPFNONull() {
                this[this.tableEORA.PFNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsECODENull() {
                return this.IsNull(this.tableEORA.ECODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetECODENull() {
                this[this.tableEORA.ECODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMEMBER_NAMENull() {
                return this.IsNull(this.tableEORA.MEMBER_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMEMBER_NAMENull() {
                this[this.tableEORA.MEMBER_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEORANull() {
                return this.IsNull(this.tableEORA.EORAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEORANull() {
                this[this.tableEORA.EORAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHRIS_EMP_NAMENull() {
                return this.IsNull(this.tableEORA.HRIS_EMP_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHRIS_EMP_NAMENull() {
                this[this.tableEORA.HRIS_EMP_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEPFWAGENull() {
                return this.IsNull(this.tableEORA.EPFWAGEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEPFWAGENull() {
                this[this.tableEORA.EPFWAGEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESG_IDNull() {
                return this.IsNull(this.tableEORA.DESG_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESG_IDNull() {
                this[this.tableEORA.DESG_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESIGNull() {
                return this.IsNull(this.tableEORA.DESIGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESIGNull() {
                this[this.tableEORA.DESIGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMP_DOJNull() {
                return this.IsNull(this.tableEORA.EMP_DOJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMP_DOJNull() {
                this[this.tableEORA.EMP_DOJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMP_DOBNull() {
                return this.IsNull(this.tableEORA.EMP_DOBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMP_DOBNull() {
                this[this.tableEORA.EMP_DOBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFATHER_NAMENull() {
                return this.IsNull(this.tableEORA.FATHER_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFATHER_NAMENull() {
                this[this.tableEORA.FATHER_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iselevel_idNull() {
                return this.IsNull(this.tableEORA.elevel_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setelevel_idNull() {
                this[this.tableEORA.elevel_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscompany_codeNull() {
                return this.IsNull(this.tableEORA.company_codeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcompany_codeNull() {
                this[this.tableEORA.company_codeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isedu_qualificationNull() {
                return this.IsNull(this.tableEORA.edu_qualificationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setedu_qualificationNull() {
                this[this.tableEORA.edu_qualificationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHRIS_DESIGNull() {
                return this.IsNull(this.tableEORA.HRIS_DESIGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHRIS_DESIGNull() {
                this[this.tableEORA.HRIS_DESIGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBRANCH_NAMENull() {
                return this.IsNull(this.tableEORA.BRANCH_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBRANCH_NAMENull() {
                this[this.tableEORA.BRANCH_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCM_COMPANY_NAMENull() {
                return this.IsNull(this.tableEORA.CM_COMPANY_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCM_COMPANY_NAMENull() {
                this[this.tableEORA.CM_COMPANY_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESIG_NAMENull() {
                return this.IsNull(this.tableEORA.DESIG_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESIG_NAMENull() {
                this[this.tableEORA.DESIG_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEPT_NAMENull() {
                return this.IsNull(this.tableEORA.DEPT_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEPT_NAMENull() {
                this[this.tableEORA.DEPT_NAMEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MainHead11Row : global::System.Data.DataRow {
            
            private MainHead11DataTable tableMainHead11;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MainHead11Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMainHead11 = ((MainHead11DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CM_COMPANY_NAME {
                get {
                    try {
                        return ((string)(this[this.tableMainHead11.CM_COMPANY_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CM_COMPANY_NAME\' in table \'MainHead11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead11.CM_COMPANY_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BRANCH_NAME {
                get {
                    try {
                        return ((string)(this[this.tableMainHead11.BRANCH_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BRANCH_NAME\' in table \'MainHead11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainHead11.BRANCH_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCM_COMPANY_NAMENull() {
                return this.IsNull(this.tableMainHead11.CM_COMPANY_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCM_COMPANY_NAMENull() {
                this[this.tableMainHead11.CM_COMPANY_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBRANCH_NAMENull() {
                return this.IsNull(this.tableMainHead11.BRANCH_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBRANCH_NAMENull() {
                this[this.tableMainHead11.BRANCH_NAMEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MainHead1RowChangeEvent : global::System.EventArgs {
            
            private MainHead1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MainHead1RowChangeEvent(MainHead1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MainHead1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EducationRowChangeEvent : global::System.EventArgs {
            
            private EducationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EducationRowChangeEvent(EducationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EducationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ShortCourseRowChangeEvent : global::System.EventArgs {
            
            private ShortCourseRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ShortCourseRowChangeEvent(ShortCourseRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ShortCourseRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CurricularRowChangeEvent : global::System.EventArgs {
            
            private CurricularRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CurricularRowChangeEvent(CurricularRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CurricularRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FamilyRowChangeEvent : global::System.EventArgs {
            
            private FamilyRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FamilyRowChangeEvent(FamilyRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FamilyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ReferenceRowChangeEvent : global::System.EventArgs {
            
            private ReferenceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReferenceRowChangeEvent(ReferenceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReferenceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ExperienceRowChangeEvent : global::System.EventArgs {
            
            private ExperienceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExperienceRowChangeEvent(ExperienceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ExperienceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DocumentsRowChangeEvent : global::System.EventArgs {
            
            private DocumentsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DocumentsRowChangeEvent(DocumentsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DocumentsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class InductionRowChangeEvent : global::System.EventArgs {
            
            private InductionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InductionRowChangeEvent(InductionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InductionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EORARowChangeEvent : global::System.EventArgs {
            
            private EORARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EORARowChangeEvent(EORARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EORARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MainHead11RowChangeEvent : global::System.EventArgs {
            
            private MainHead11Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MainHead11RowChangeEvent(MainHead11Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MainHead11Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591